2021-11-15 11:25:35.190613 (MainThread): Running with dbt=0.21.0
2021-11-15 11:25:35.864497 (MainThread): running dbt with arguments Namespace(cls=<class 'dbt.task.run.RunTask'>, debug=False, defer=None, exclude=None, fail_fast=False, full_refresh=False, log_cache_events=False, log_format='default', partial_parse=None, profile=None, profiles_dir='/Users/andreychurkin/.dbt', project_dir=None, record_timing_info=None, rpc_method='run', select=None, selector_name=None, single_threaded=False, state=None, strict=False, target=None, test_new_parser=False, threads=None, use_cache=True, use_colors=None, use_experimental_parser=False, vars='{}', version_check=True, warn_error=False, which='run', write_json=True)
2021-11-15 11:25:35.865810 (MainThread): Tracking: tracking
2021-11-15 11:25:35.875551 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x102f62f10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105c5bb20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105c5ba30>]}
2021-11-15 11:25:35.890883 (MainThread): Partial parsing not enabled
2021-11-15 11:25:35.913712 (MainThread): Parsing macros/etc.sql
2021-11-15 11:25:35.916056 (MainThread): Parsing macros/catalog.sql
2021-11-15 11:25:35.922280 (MainThread): Parsing macros/adapters.sql
2021-11-15 11:25:35.943903 (MainThread): Parsing macros/materializations/seed.sql
2021-11-15 11:25:35.946363 (MainThread): Parsing macros/materializations/view.sql
2021-11-15 11:25:35.948859 (MainThread): Parsing macros/materializations/table.sql
2021-11-15 11:25:35.958266 (MainThread): Parsing macros/materializations/copy.sql
2021-11-15 11:25:35.961028 (MainThread): Parsing macros/materializations/incremental.sql
2021-11-15 11:25:35.975355 (MainThread): Parsing macros/materializations/snapshot.sql
2021-11-15 11:25:35.977043 (MainThread): Parsing macros/core.sql
2021-11-15 11:25:35.980522 (MainThread): Parsing macros/materializations/test.sql
2021-11-15 11:25:35.987028 (MainThread): Parsing macros/materializations/helpers.sql
2021-11-15 11:25:35.996466 (MainThread): Parsing macros/materializations/snapshot/snapshot_merge.sql
2021-11-15 11:25:35.998005 (MainThread): Parsing macros/materializations/snapshot/strategies.sql
2021-11-15 11:25:36.014808 (MainThread): Parsing macros/materializations/snapshot/snapshot.sql
2021-11-15 11:25:36.046401 (MainThread): Parsing macros/materializations/seed/seed.sql
2021-11-15 11:25:36.068457 (MainThread): Parsing macros/materializations/incremental/helpers.sql
2021-11-15 11:25:36.070103 (MainThread): Parsing macros/materializations/incremental/incremental.sql
2021-11-15 11:25:36.080001 (MainThread): Parsing macros/materializations/incremental/on_schema_change.sql
2021-11-15 11:25:36.099047 (MainThread): Parsing macros/materializations/common/merge.sql
2021-11-15 11:25:36.112078 (MainThread): Parsing macros/materializations/table/table.sql
2021-11-15 11:25:36.119807 (MainThread): Parsing macros/materializations/view/view.sql
2021-11-15 11:25:36.126751 (MainThread): Parsing macros/materializations/view/create_or_replace_view.sql
2021-11-15 11:25:36.130463 (MainThread): Parsing macros/etc/get_custom_alias.sql
2021-11-15 11:25:36.131823 (MainThread): Parsing macros/etc/query.sql
2021-11-15 11:25:36.132711 (MainThread): Parsing macros/etc/is_incremental.sql
2021-11-15 11:25:36.134107 (MainThread): Parsing macros/etc/datetime.sql
2021-11-15 11:25:36.142124 (MainThread): Parsing macros/etc/where_subquery.sql
2021-11-15 11:25:36.143773 (MainThread): Parsing macros/etc/get_custom_schema.sql
2021-11-15 11:25:36.146324 (MainThread): Parsing macros/etc/get_custom_database.sql
2021-11-15 11:25:36.147798 (MainThread): Parsing macros/adapters/common.sql
2021-11-15 11:25:36.198119 (MainThread): Parsing macros/schema_tests/relationships.sql
2021-11-15 11:25:36.199644 (MainThread): Parsing macros/schema_tests/not_null.sql
2021-11-15 11:25:36.200739 (MainThread): Parsing macros/schema_tests/unique.sql
2021-11-15 11:25:36.201980 (MainThread): Parsing macros/schema_tests/accepted_values.sql
2021-11-15 11:25:36.398391 (MainThread): Acquiring new bigquery connection "model.dbt_training.my_first_dbt_model".
2021-11-15 11:25:36.409932 (MainThread): Acquiring new bigquery connection "model.dbt_training.my_second_dbt_model".
2021-11-15 11:25:36.436728 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-11-15 11:25:36.438349 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-11-15 11:25:36.439966 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-11-15 11:25:36.441532 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-11-15 11:25:36.455933 (MainThread): Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '49c6f258-edbb-43e8-a618-4972f4f1b3a7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1057a6400>]}
2021-11-15 11:25:36.460527 (MainThread): write_gpickle is deprecated and will be removed in 3.0.Use ``pickle.dump(G, path, protocol)``
2021-11-15 11:25:36.460876 (MainThread): Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '49c6f258-edbb-43e8-a618-4972f4f1b3a7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105ce8850>]}
2021-11-15 11:25:36.461084 (MainThread): Found 2 models, 4 tests, 0 snapshots, 0 analyses, 184 macros, 0 operations, 0 seed files, 0 sources, 0 exposures
2021-11-15 11:25:36.462408 (MainThread): 
2021-11-15 11:25:36.462675 (MainThread): Acquiring new bigquery connection "master".
2021-11-15 11:25:36.463603 (ThreadPoolExecutor-0_0): Acquiring new bigquery connection "list_dbt-technical-training".
2021-11-15 11:25:36.463852 (ThreadPoolExecutor-0_0): Opening a new connection, currently in state init
2021-11-15 11:25:37.266102 (ThreadPoolExecutor-0_0): Acquiring new bigquery connection "create_dbt-technical-training_dbt_alice".
2021-11-15 11:25:37.266541 (ThreadPoolExecutor-0_0): Acquiring new bigquery connection "create_dbt-technical-training_dbt_alice".
2021-11-15 11:25:37.266744 (ThreadPoolExecutor-0_0): Creating schema "dbt-technical-training.dbt_alice".
2021-11-15 11:25:37.266957 (ThreadPoolExecutor-0_0): Opening a new connection, currently in state closed
2021-11-15 11:25:37.271802 (ThreadPoolExecutor-0_0): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-11-15 11:25:37.887064 (ThreadPoolExecutor-1_0): Acquiring new bigquery connection "list_dbt-technical-training_dbt_alice".
2021-11-15 11:25:37.887530 (ThreadPoolExecutor-1_0): Opening a new connection, currently in state closed
2021-11-15 11:25:37.892917 (ThreadPoolExecutor-1_0): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-11-15 11:25:37.896505 (ThreadPoolExecutor-1_0): unclosed <ssl.SSLSocket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.1.40', 64713), raddr=('64.233.165.95', 443)>
2021-11-15 11:25:37.896759 (ThreadPoolExecutor-1_0): unclosed <ssl.SSLSocket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.1.40', 64714), raddr=('74.125.131.95', 443)>
2021-11-15 11:25:38.471367 (MainThread): 14:25:38 | Concurrency: 1 threads (target='dev')
2021-11-15 11:25:38.471765 (MainThread): 14:25:38 | 
2021-11-15 11:25:38.475563 (Thread-1): Began running node model.dbt_training.my_first_dbt_model
2021-11-15 11:25:38.475979 (Thread-1): 14:25:38 | 1 of 2 START table model dbt_alice.my_first_dbt_model................ [RUN]
2021-11-15 11:25:38.476415 (Thread-1): Acquiring new bigquery connection "model.dbt_training.my_first_dbt_model".
2021-11-15 11:25:38.476630 (Thread-1): Compiling model.dbt_training.my_first_dbt_model
2021-11-15 11:25:38.479691 (Thread-1): Writing injected SQL for node "model.dbt_training.my_first_dbt_model"
2021-11-15 11:25:38.480576 (Thread-1): finished collecting timing info
2021-11-15 11:25:38.525869 (Thread-1): Writing runtime SQL for node "model.dbt_training.my_first_dbt_model"
2021-11-15 11:25:38.526615 (Thread-1): Opening a new connection, currently in state closed
2021-11-15 11:25:38.530365 (Thread-1): On model.dbt_training.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "dbt_training", "target_name": "dev", "node_id": "model.dbt_training.my_first_dbt_model"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`my_first_dbt_model`
  
  
  OPTIONS()
  as (
    /*
    Welcome to your first dbt model!
    Did you know that you can also configure models directly within SQL files?
    This will override configurations stated in dbt_project.yml

    Try changing "table" to "view" below
*/



with source_data as (

    select 1 as id
    union all
    select null as id

)

select *
from source_data

/*
    Uncomment the line below to remove records with null `id` values
*/

-- where id is not null
  );
    
2021-11-15 11:25:41.288581 (Thread-1): finished collecting timing info
2021-11-15 11:25:41.289105 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '49c6f258-edbb-43e8-a618-4972f4f1b3a7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105eb45b0>]}
2021-11-15 11:25:41.289528 (Thread-1): 14:25:41 | 1 of 2 OK created table model dbt_alice.my_first_dbt_model........... [CREATE TABLE (2.0 rows, 0.0 Bytes processed) in 2.81s]
2021-11-15 11:25:41.289749 (Thread-1): Finished running node model.dbt_training.my_first_dbt_model
2021-11-15 11:25:41.290326 (Thread-1): Began running node model.dbt_training.my_second_dbt_model
2021-11-15 11:25:41.290632 (Thread-1): 14:25:41 | 2 of 2 START view model dbt_alice.my_second_dbt_model................ [RUN]
2021-11-15 11:25:41.291080 (Thread-1): Acquiring new bigquery connection "model.dbt_training.my_second_dbt_model".
2021-11-15 11:25:41.291286 (Thread-1): Compiling model.dbt_training.my_second_dbt_model
2021-11-15 11:25:41.292019 (Thread-1): unclosed <ssl.SSLSocket fd=17, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.1.40', 64721), raddr=('64.233.165.95', 443)>
2021-11-15 11:25:41.292262 (Thread-1): unclosed <ssl.SSLSocket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.1.40', 64722), raddr=('74.125.131.95', 443)>
2021-11-15 11:25:41.294484 (Thread-1): Writing injected SQL for node "model.dbt_training.my_second_dbt_model"
2021-11-15 11:25:41.295013 (Thread-1): finished collecting timing info
2021-11-15 11:25:41.312996 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.1.40', 64707), raddr=('64.233.165.95', 443)>
2021-11-15 11:25:41.313265 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.1.40', 64708), raddr=('74.125.131.95', 443)>
2021-11-15 11:25:41.313486 (Thread-1): unclosed <ssl.SSLSocket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.1.40', 64715), raddr=('64.233.165.95', 443)>
2021-11-15 11:25:41.313679 (Thread-1): unclosed <ssl.SSLSocket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.1.40', 64720), raddr=('74.125.131.95', 443)>
2021-11-15 11:25:41.317147 (Thread-1): Writing runtime SQL for node "model.dbt_training.my_second_dbt_model"
2021-11-15 11:25:41.317677 (Thread-1): Opening a new connection, currently in state closed
2021-11-15 11:25:41.321857 (Thread-1): On model.dbt_training.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "dbt_training", "target_name": "dev", "node_id": "model.dbt_training.my_second_dbt_model"} */


  create or replace view `dbt-technical-training`.`dbt_alice`.`my_second_dbt_model`
  OPTIONS()
  as -- Use the `ref` function to select from other models

select *
from `dbt-technical-training`.`dbt_alice`.`my_first_dbt_model`
where id = 1;


2021-11-15 11:25:42.358061 (Thread-1): finished collecting timing info
2021-11-15 11:25:42.358631 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '49c6f258-edbb-43e8-a618-4972f4f1b3a7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105ebaca0>]}
2021-11-15 11:25:42.359089 (Thread-1): 14:25:42 | 2 of 2 OK created view model dbt_alice.my_second_dbt_model........... [OK in 1.07s]
2021-11-15 11:25:42.359333 (Thread-1): Finished running node model.dbt_training.my_second_dbt_model
2021-11-15 11:25:42.360516 (MainThread): Acquiring new bigquery connection "master".
2021-11-15 11:25:42.360964 (MainThread): 14:25:42 | 
2021-11-15 11:25:42.361176 (MainThread): 14:25:42 | Finished running 1 table model, 1 view model in 5.90s.
2021-11-15 11:25:42.361362 (MainThread): Connection 'master' was properly closed.
2021-11-15 11:25:42.361520 (MainThread): Connection 'model.dbt_training.my_second_dbt_model' was properly closed.
2021-11-15 11:25:42.367485 (MainThread): 
2021-11-15 11:25:42.367731 (MainThread): Completed successfully
2021-11-15 11:25:42.367938 (MainThread): 
Done. PASS=2 WARN=0 ERROR=0 SKIP=0 TOTAL=2
2021-11-15 11:25:42.368216 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105dcffa0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105ce8a60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105c5e520>]}
2021-11-15 11:25:42.368478 (MainThread): Flushing usage events
2021-12-01 08:49:51.794239 (MainThread): Running with dbt=0.21.0
2021-12-01 08:49:52.654353 (MainThread): running dbt with arguments Namespace(cls=<class 'dbt.task.run.RunTask'>, debug=False, defer=None, exclude=None, fail_fast=False, full_refresh=False, log_cache_events=False, log_format='default', partial_parse=None, profile=None, profiles_dir='/Users/andreychurkin/.dbt', project_dir=None, record_timing_info=None, rpc_method='run', select=None, selector_name=None, single_threaded=False, state=None, strict=False, target=None, test_new_parser=False, threads=None, use_cache=True, use_colors=None, use_experimental_parser=False, vars='{}', version_check=True, warn_error=False, which='run', write_json=True)
2021-12-01 08:49:52.656892 (MainThread): Tracking: tracking
2021-12-01 08:49:52.668370 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e604f10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e5e9280>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e5e9400>]}
2021-12-01 08:49:52.687558 (MainThread): Partial parsing not enabled
2021-12-01 08:49:52.715304 (MainThread): Parsing macros/etc.sql
2021-12-01 08:49:52.718173 (MainThread): Parsing macros/catalog.sql
2021-12-01 08:49:52.724893 (MainThread): Parsing macros/adapters.sql
2021-12-01 08:49:52.747422 (MainThread): Parsing macros/materializations/seed.sql
2021-12-01 08:49:52.750004 (MainThread): Parsing macros/materializations/view.sql
2021-12-01 08:49:52.752574 (MainThread): Parsing macros/materializations/table.sql
2021-12-01 08:49:52.762465 (MainThread): Parsing macros/materializations/copy.sql
2021-12-01 08:49:52.765259 (MainThread): Parsing macros/materializations/incremental.sql
2021-12-01 08:49:52.780237 (MainThread): Parsing macros/materializations/snapshot.sql
2021-12-01 08:49:52.781922 (MainThread): Parsing macros/core.sql
2021-12-01 08:49:52.785547 (MainThread): Parsing macros/materializations/test.sql
2021-12-01 08:49:52.792232 (MainThread): Parsing macros/materializations/helpers.sql
2021-12-01 08:49:52.802117 (MainThread): Parsing macros/materializations/snapshot/snapshot_merge.sql
2021-12-01 08:49:52.803715 (MainThread): Parsing macros/materializations/snapshot/strategies.sql
2021-12-01 08:49:52.821465 (MainThread): Parsing macros/materializations/snapshot/snapshot.sql
2021-12-01 08:49:52.853478 (MainThread): Parsing macros/materializations/seed/seed.sql
2021-12-01 08:49:52.876143 (MainThread): Parsing macros/materializations/incremental/helpers.sql
2021-12-01 08:49:52.878005 (MainThread): Parsing macros/materializations/incremental/incremental.sql
2021-12-01 08:49:52.888617 (MainThread): Parsing macros/materializations/incremental/on_schema_change.sql
2021-12-01 08:49:52.908267 (MainThread): Parsing macros/materializations/common/merge.sql
2021-12-01 08:49:52.922069 (MainThread): Parsing macros/materializations/table/table.sql
2021-12-01 08:49:52.930089 (MainThread): Parsing macros/materializations/view/view.sql
2021-12-01 08:49:52.937438 (MainThread): Parsing macros/materializations/view/create_or_replace_view.sql
2021-12-01 08:49:52.941395 (MainThread): Parsing macros/etc/get_custom_alias.sql
2021-12-01 08:49:52.942843 (MainThread): Parsing macros/etc/query.sql
2021-12-01 08:49:52.943782 (MainThread): Parsing macros/etc/is_incremental.sql
2021-12-01 08:49:52.945267 (MainThread): Parsing macros/etc/datetime.sql
2021-12-01 08:49:52.953955 (MainThread): Parsing macros/etc/where_subquery.sql
2021-12-01 08:49:52.955835 (MainThread): Parsing macros/etc/get_custom_schema.sql
2021-12-01 08:49:52.958341 (MainThread): Parsing macros/etc/get_custom_database.sql
2021-12-01 08:49:52.959890 (MainThread): Parsing macros/adapters/common.sql
2021-12-01 08:49:53.014217 (MainThread): Parsing macros/schema_tests/relationships.sql
2021-12-01 08:49:53.015975 (MainThread): Parsing macros/schema_tests/not_null.sql
2021-12-01 08:49:53.017301 (MainThread): Parsing macros/schema_tests/unique.sql
2021-12-01 08:49:53.018648 (MainThread): Parsing macros/schema_tests/accepted_values.sql
2021-12-01 08:49:53.230047 (MainThread): Acquiring new bigquery connection "model.dbt_training.my_first_dbt_model".
2021-12-01 08:49:53.245011 (MainThread): Acquiring new bigquery connection "model.dbt_training.my_second_dbt_model".
2021-12-01 08:49:53.275499 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 08:49:53.277270 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 08:49:53.279013 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 08:49:53.280697 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 08:49:53.299330 (MainThread): Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '7058e905-bd37-4756-bf09-28a7571fc4ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e745fd0>]}
2021-12-01 08:49:53.304728 (MainThread): write_gpickle is deprecated and will be removed in 3.0.Use ``pickle.dump(G, path, protocol)``
2021-12-01 08:49:53.305159 (MainThread): Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '7058e905-bd37-4756-bf09-28a7571fc4ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e7459d0>]}
2021-12-01 08:49:53.305426 (MainThread): Found 2 models, 4 tests, 0 snapshots, 0 analyses, 184 macros, 0 operations, 0 seed files, 0 sources, 0 exposures
2021-12-01 08:49:53.306950 (MainThread): 
2021-12-01 08:49:53.307288 (MainThread): Acquiring new bigquery connection "master".
2021-12-01 08:49:53.308087 (ThreadPoolExecutor-0_0): Acquiring new bigquery connection "list_dbt-technical-training".
2021-12-01 08:49:53.308302 (ThreadPoolExecutor-0_0): Opening a new connection, currently in state init
2021-12-01 08:49:54.022534 (ThreadPoolExecutor-1_0): Acquiring new bigquery connection "list_dbt-technical-training_dbt_alice".
2021-12-01 08:49:54.022910 (ThreadPoolExecutor-1_0): Opening a new connection, currently in state closed
2021-12-01 08:49:54.027987 (ThreadPoolExecutor-1_0): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 08:49:54.613828 (MainThread): 11:49:54 | Concurrency: 1 threads (target='dev')
2021-12-01 08:49:54.614073 (MainThread): 11:49:54 | 
2021-12-01 08:49:54.616850 (Thread-1): Began running node model.dbt_training.my_first_dbt_model
2021-12-01 08:49:54.617210 (Thread-1): 11:49:54 | 1 of 2 START table model dbt_alice.my_first_dbt_model................ [RUN]
2021-12-01 08:49:54.617579 (Thread-1): Acquiring new bigquery connection "model.dbt_training.my_first_dbt_model".
2021-12-01 08:49:54.617775 (Thread-1): Compiling model.dbt_training.my_first_dbt_model
2021-12-01 08:49:54.620462 (Thread-1): Writing injected SQL for node "model.dbt_training.my_first_dbt_model"
2021-12-01 08:49:54.621104 (Thread-1): finished collecting timing info
2021-12-01 08:49:54.642269 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 08:49:54.646515 (Thread-1): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 08:49:55.063596 (Thread-1): Writing runtime SQL for node "model.dbt_training.my_first_dbt_model"
2021-12-01 08:49:55.064223 (Thread-1): On model.dbt_training.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.dbt_training.my_first_dbt_model"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`my_first_dbt_model`
  
  
  OPTIONS()
  as (
    /*
    Welcome to your first dbt model!
    Did you know that you can also configure models directly within SQL files?
    This will override configurations stated in dbt_project.yml

    Try changing "table" to "view" below
*/



with source_data as (

    select 1 as id
    union all
    select null as id

)

select *
from source_data

/*
    Uncomment the line below to remove records with null `id` values
*/

-- where id is not null
  );
    
2021-12-01 08:49:57.803770 (Thread-1): finished collecting timing info
2021-12-01 08:49:57.804281 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7058e905-bd37-4756-bf09-28a7571fc4ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e821820>]}
2021-12-01 08:49:57.804747 (Thread-1): 11:49:57 | 1 of 2 OK created table model dbt_alice.my_first_dbt_model........... [CREATE TABLE (2.0 rows, 0.0 Bytes processed) in 3.19s]
2021-12-01 08:49:57.804987 (Thread-1): Finished running node model.dbt_training.my_first_dbt_model
2021-12-01 08:49:57.805585 (Thread-1): Began running node model.dbt_training.my_second_dbt_model
2021-12-01 08:49:57.806003 (Thread-1): 11:49:57 | 2 of 2 START view model dbt_alice.my_second_dbt_model................ [RUN]
2021-12-01 08:49:57.806472 (Thread-1): Acquiring new bigquery connection "model.dbt_training.my_second_dbt_model".
2021-12-01 08:49:57.806697 (Thread-1): Compiling model.dbt_training.my_second_dbt_model
2021-12-01 08:49:57.809266 (Thread-1): Writing injected SQL for node "model.dbt_training.my_second_dbt_model"
2021-12-01 08:49:57.809777 (Thread-1): finished collecting timing info
2021-12-01 08:49:57.828742 (Thread-1): Writing runtime SQL for node "model.dbt_training.my_second_dbt_model"
2021-12-01 08:49:57.829309 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 08:49:57.833197 (Thread-1): On model.dbt_training.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.dbt_training.my_second_dbt_model"} */


  create or replace view `dbt-technical-training`.`dbt_alice`.`my_second_dbt_model`
  OPTIONS()
  as -- Use the `ref` function to select from other models

select *
from `dbt-technical-training`.`dbt_alice`.`my_first_dbt_model`
where id = 1;


2021-12-01 08:49:58.977684 (Thread-1): finished collecting timing info
2021-12-01 08:49:58.978276 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7058e905-bd37-4756-bf09-28a7571fc4ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e866850>]}
2021-12-01 08:49:58.978770 (Thread-1): 11:49:58 | 2 of 2 OK created view model dbt_alice.my_second_dbt_model........... [OK in 1.17s]
2021-12-01 08:49:58.979026 (Thread-1): Finished running node model.dbt_training.my_second_dbt_model
2021-12-01 08:49:58.980221 (MainThread): Acquiring new bigquery connection "master".
2021-12-01 08:49:58.980672 (MainThread): 11:49:58 | 
2021-12-01 08:49:58.980919 (MainThread): 11:49:58 | Finished running 1 table model, 1 view model in 5.67s.
2021-12-01 08:49:58.981161 (MainThread): Connection 'master' was properly closed.
2021-12-01 08:49:58.981330 (MainThread): Connection 'model.dbt_training.my_second_dbt_model' was properly closed.
2021-12-01 08:49:58.982882 (MainThread): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64641), raddr=('74.125.131.95', 443)>
2021-12-01 08:49:58.983165 (MainThread): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64642), raddr=('209.85.233.95', 443)>
2021-12-01 08:49:58.983415 (MainThread): unclosed <ssl.SSLSocket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64643), raddr=('74.125.131.95', 443)>
2021-12-01 08:49:58.983663 (MainThread): unclosed <ssl.SSLSocket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64644), raddr=('209.85.233.95', 443)>
2021-12-01 08:49:58.984010 (MainThread): unclosed <ssl.SSLSocket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64645), raddr=('74.125.131.95', 443)>
2021-12-01 08:49:58.984257 (MainThread): unclosed <ssl.SSLSocket fd=19, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64646), raddr=('209.85.233.95', 443)>
2021-12-01 08:49:58.984526 (MainThread): unclosed <ssl.SSLSocket fd=20, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64648), raddr=('74.125.131.95', 443)>
2021-12-01 08:49:58.984759 (MainThread): unclosed <ssl.SSLSocket fd=21, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64649), raddr=('209.85.233.95', 443)>
2021-12-01 08:49:58.990482 (MainThread): 
2021-12-01 08:49:58.990725 (MainThread): Completed successfully
2021-12-01 08:49:58.990945 (MainThread): 
Done. PASS=2 WARN=0 ERROR=0 SKIP=0 TOTAL=2
2021-12-01 08:49:58.991246 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e63d2e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e8211c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e8210d0>]}
2021-12-01 08:49:58.991542 (MainThread): Flushing usage events
2021-12-01 09:05:30.369994 (MainThread): Running with dbt=0.21.0
2021-12-01 09:05:31.211143 (MainThread): running dbt with arguments Namespace(cls=<class 'dbt.task.deps.DepsTask'>, debug=False, defer=None, log_cache_events=False, log_format='default', partial_parse=None, profile=None, profiles_dir='/Users/andreychurkin/.dbt', project_dir=None, record_timing_info=None, rpc_method='deps', single_threaded=False, state=None, strict=False, target=None, test_new_parser=False, use_cache=True, use_colors=None, use_experimental_parser=False, vars='{}', warn_error=False, which='deps', write_json=True)
2021-12-01 09:05:31.212484 (MainThread): Tracking: tracking
2021-12-01 09:05:31.225475 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fbcf940>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fbb47c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fbb4a00>]}
2021-12-01 09:05:31.227007 (MainThread): Warning: No packages were found in packages.yml
2021-12-01 09:05:31.227492 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fbcf940>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fbb47c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fbb4a00>]}
2021-12-01 09:05:31.227782 (MainThread): Flushing usage events
2021-12-01 09:05:59.145072 (MainThread): Running with dbt=0.21.0
2021-12-01 09:05:59.931443 (MainThread): running dbt with arguments Namespace(cls=<class 'dbt.task.deps.DepsTask'>, debug=False, defer=None, log_cache_events=False, log_format='default', partial_parse=None, profile=None, profiles_dir='/Users/andreychurkin/.dbt', project_dir=None, record_timing_info=None, rpc_method='deps', single_threaded=False, state=None, strict=False, target=None, test_new_parser=False, use_cache=True, use_colors=None, use_experimental_parser=False, vars='{}', warn_error=False, which='deps', write_json=True)
2021-12-01 09:05:59.932786 (MainThread): Tracking: tracking
2021-12-01 09:05:59.945946 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1071de5b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10722b460>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10722b370>]}
2021-12-01 09:05:59.950634 (MainThread): Set downloads directory='/var/folders/yg/7wmz3rpx3ls1z6kzcvn4s3j40000gn/T/dbt-downloads-_txl6wjk'
2021-12-01 09:05:59.951698 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/index.json
2021-12-01 09:06:00.223080 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/index.json 200
2021-12-01 09:06:00.223509 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/github.json
2021-12-01 09:06:00.685982 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/github.json 200
2021-12-01 09:06:00.689160 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/github/0.3.0.json
2021-12-01 09:06:00.948396 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/github/0.3.0.json 200
2021-12-01 09:06:00.949288 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/github_source.json
2021-12-01 09:06:01.324335 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/github_source.json 200
2021-12-01 09:06:01.330104 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/github_source/0.3.0.json
2021-12-01 09:06:01.681005 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/github_source/0.3.0.json 200
2021-12-01 09:06:01.681859 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/fivetran_utils.json
2021-12-01 09:06:02.184803 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/fivetran_utils.json 200
2021-12-01 09:06:02.194033 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/fivetran_utils/0.2.9.json
2021-12-01 09:06:02.434880 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/fivetran_utils/0.2.9.json 200
2021-12-01 09:06:02.435504 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json
2021-12-01 09:06:02.509616 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json 200
2021-12-01 09:06:02.542072 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils/0.7.4.json
2021-12-01 09:06:02.685856 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils/0.7.4.json 200
2021-12-01 09:06:02.686278 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/github.json
2021-12-01 09:06:02.762050 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/github.json 200
2021-12-01 09:06:02.765286 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/github_source.json
2021-12-01 09:06:02.853012 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/github_source.json 200
2021-12-01 09:06:02.857898 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/fivetran_utils.json
2021-12-01 09:06:02.932489 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/fivetran_utils.json 200
2021-12-01 09:06:02.941376 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json
2021-12-01 09:06:03.013545 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json 200
2021-12-01 09:06:03.047767 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/github/0.3.0.json
2021-12-01 09:06:03.122861 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/github/0.3.0.json 200
2021-12-01 09:06:03.123251 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/github_source/0.3.0.json
2021-12-01 09:06:03.198384 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/github_source/0.3.0.json 200
2021-12-01 09:06:03.198803 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/fivetran_utils/0.2.9.json
2021-12-01 09:06:03.273835 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/fivetran_utils/0.2.9.json 200
2021-12-01 09:06:03.274213 (MainThread): Making package registry request: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils/0.7.4.json
2021-12-01 09:06:03.347808 (MainThread): Response from registry: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils/0.7.4.json 200
2021-12-01 09:06:03.348396 (MainThread): Installing fivetran/github@0.3.0
2021-12-01 09:06:03.763141 (MainThread):   Installed from version 0.3.0
2021-12-01 09:06:03.763401 (MainThread):   Up to date!
2021-12-01 09:06:03.763670 (MainThread): Sending event: {'category': 'dbt', 'action': 'package', 'label': '2a269407-205a-48ea-9ad8-6a155afb9360', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106d38a90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106d92a00>]}
2021-12-01 09:06:03.763957 (MainThread): Installing fivetran/github_source@0.3.0
2021-12-01 09:06:04.314743 (MainThread):   Installed from version 0.3.0
2021-12-01 09:06:04.314968 (MainThread):   Up to date!
2021-12-01 09:06:04.315183 (MainThread): Sending event: {'category': 'dbt', 'action': 'package', 'label': '2a269407-205a-48ea-9ad8-6a155afb9360', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106d92a00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107276df0>]}
2021-12-01 09:06:04.315430 (MainThread): Installing fivetran/fivetran_utils@0.2.9
2021-12-01 09:06:04.595425 (MainThread):   Installed from version 0.2.9
2021-12-01 09:06:04.595651 (MainThread):   Up to date!
2021-12-01 09:06:04.595870 (MainThread): Sending event: {'category': 'dbt', 'action': 'package', 'label': '2a269407-205a-48ea-9ad8-6a155afb9360', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106d92a00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106dc2130>]}
2021-12-01 09:06:04.596116 (MainThread): Installing dbt-labs/dbt_utils@0.7.4
2021-12-01 09:06:04.981340 (MainThread):   Installed from version 0.7.4
2021-12-01 09:06:04.981613 (MainThread):   Up to date!
2021-12-01 09:06:04.981873 (MainThread): Sending event: {'category': 'dbt', 'action': 'package', 'label': '2a269407-205a-48ea-9ad8-6a155afb9360', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106d38a90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107276c40>]}
2021-12-01 09:06:04.984982 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106d8c850>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106da33d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105dfbbe0>]}
2021-12-01 09:06:04.985278 (MainThread): Flushing usage events
2021-12-01 09:07:25.234025 (MainThread): Running with dbt=0.21.0
2021-12-01 09:07:26.054798 (MainThread): running dbt with arguments Namespace(cls=<class 'dbt.task.run.RunTask'>, debug=False, defer=None, exclude=None, fail_fast=False, full_refresh=False, log_cache_events=False, log_format='default', partial_parse=None, profile=None, profiles_dir='/Users/andreychurkin/.dbt', project_dir=None, record_timing_info=None, rpc_method='run', select=None, selector_name=None, single_threaded=False, state=None, strict=False, target=None, test_new_parser=False, threads=None, use_cache=True, use_colors=None, use_experimental_parser=False, vars='{}', version_check=True, warn_error=False, which='run', write_json=True)
2021-12-01 09:07:26.056558 (MainThread): Tracking: tracking
2021-12-01 09:07:26.068119 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b134fa0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ddaeb80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ddae5e0>]}
2021-12-01 09:07:26.134478 (MainThread): Partial parsing not enabled
2021-12-01 09:07:26.319544 (MainThread): Parsing macros/etc.sql
2021-12-01 09:07:26.322088 (MainThread): Parsing macros/catalog.sql
2021-12-01 09:07:26.328013 (MainThread): Parsing macros/adapters.sql
2021-12-01 09:07:26.352094 (MainThread): Parsing macros/materializations/seed.sql
2021-12-01 09:07:26.354870 (MainThread): Parsing macros/materializations/view.sql
2021-12-01 09:07:26.357411 (MainThread): Parsing macros/materializations/table.sql
2021-12-01 09:07:26.368210 (MainThread): Parsing macros/materializations/copy.sql
2021-12-01 09:07:26.370894 (MainThread): Parsing macros/materializations/incremental.sql
2021-12-01 09:07:26.386448 (MainThread): Parsing macros/materializations/snapshot.sql
2021-12-01 09:07:26.388071 (MainThread): Parsing macros/core.sql
2021-12-01 09:07:26.391832 (MainThread): Parsing macros/materializations/test.sql
2021-12-01 09:07:26.399137 (MainThread): Parsing macros/materializations/helpers.sql
2021-12-01 09:07:26.409303 (MainThread): Parsing macros/materializations/snapshot/snapshot_merge.sql
2021-12-01 09:07:26.411153 (MainThread): Parsing macros/materializations/snapshot/strategies.sql
2021-12-01 09:07:26.429678 (MainThread): Parsing macros/materializations/snapshot/snapshot.sql
2021-12-01 09:07:26.463827 (MainThread): Parsing macros/materializations/seed/seed.sql
2021-12-01 09:07:26.488063 (MainThread): Parsing macros/materializations/incremental/helpers.sql
2021-12-01 09:07:26.489919 (MainThread): Parsing macros/materializations/incremental/incremental.sql
2021-12-01 09:07:26.500991 (MainThread): Parsing macros/materializations/incremental/on_schema_change.sql
2021-12-01 09:07:26.521397 (MainThread): Parsing macros/materializations/common/merge.sql
2021-12-01 09:07:26.536050 (MainThread): Parsing macros/materializations/table/table.sql
2021-12-01 09:07:26.543878 (MainThread): Parsing macros/materializations/view/view.sql
2021-12-01 09:07:26.551895 (MainThread): Parsing macros/materializations/view/create_or_replace_view.sql
2021-12-01 09:07:26.555775 (MainThread): Parsing macros/etc/get_custom_alias.sql
2021-12-01 09:07:26.557391 (MainThread): Parsing macros/etc/query.sql
2021-12-01 09:07:26.558342 (MainThread): Parsing macros/etc/is_incremental.sql
2021-12-01 09:07:26.559956 (MainThread): Parsing macros/etc/datetime.sql
2021-12-01 09:07:26.569008 (MainThread): Parsing macros/etc/where_subquery.sql
2021-12-01 09:07:26.570888 (MainThread): Parsing macros/etc/get_custom_schema.sql
2021-12-01 09:07:26.573394 (MainThread): Parsing macros/etc/get_custom_database.sql
2021-12-01 09:07:26.574934 (MainThread): Parsing macros/adapters/common.sql
2021-12-01 09:07:26.630562 (MainThread): Parsing macros/schema_tests/relationships.sql
2021-12-01 09:07:26.632211 (MainThread): Parsing macros/schema_tests/not_null.sql
2021-12-01 09:07:26.633396 (MainThread): Parsing macros/schema_tests/unique.sql
2021-12-01 09:07:26.634835 (MainThread): Parsing macros/schema_tests/accepted_values.sql
2021-12-01 09:07:26.637452 (MainThread): Parsing macros/cross_db_utils/except.sql
2021-12-01 09:07:26.638508 (MainThread): Parsing macros/cross_db_utils/replace.sql
2021-12-01 09:07:26.639930 (MainThread): Parsing macros/cross_db_utils/concat.sql
2021-12-01 09:07:26.640914 (MainThread): Parsing macros/cross_db_utils/datatypes.sql
2021-12-01 09:07:26.647484 (MainThread): Parsing macros/cross_db_utils/_is_relation.sql
2021-12-01 09:07:26.648706 (MainThread): Parsing macros/cross_db_utils/length.sql
2021-12-01 09:07:26.649944 (MainThread): Parsing macros/cross_db_utils/dateadd.sql
2021-12-01 09:07:26.653025 (MainThread): Parsing macros/cross_db_utils/intersect.sql
2021-12-01 09:07:26.654065 (MainThread): Parsing macros/cross_db_utils/right.sql
2021-12-01 09:07:26.656303 (MainThread): Parsing macros/cross_db_utils/datediff.sql
2021-12-01 09:07:26.666658 (MainThread): Parsing macros/cross_db_utils/safe_cast.sql
2021-12-01 09:07:26.668544 (MainThread): Parsing macros/cross_db_utils/hash.sql
2021-12-01 09:07:26.670169 (MainThread): Parsing macros/cross_db_utils/cast_bool_to_text.sql
2021-12-01 09:07:26.671565 (MainThread): Parsing macros/cross_db_utils/identifier.sql
2021-12-01 09:07:26.673196 (MainThread): Parsing macros/cross_db_utils/position.sql
2021-12-01 09:07:26.674700 (MainThread): Parsing macros/cross_db_utils/literal.sql
2021-12-01 09:07:26.675693 (MainThread): Parsing macros/cross_db_utils/current_timestamp.sql
2021-12-01 09:07:26.679648 (MainThread): Parsing macros/cross_db_utils/width_bucket.sql
2021-12-01 09:07:26.685025 (MainThread): Parsing macros/cross_db_utils/last_day.sql
2021-12-01 09:07:26.688474 (MainThread): Parsing macros/cross_db_utils/split_part.sql
2021-12-01 09:07:26.690257 (MainThread): Parsing macros/cross_db_utils/date_trunc.sql
2021-12-01 09:07:26.691699 (MainThread): Parsing macros/cross_db_utils/_is_ephemeral.sql
2021-12-01 09:07:26.693786 (MainThread): Parsing macros/materializations/insert_by_period_materialization.sql
2021-12-01 09:07:26.720239 (MainThread): Parsing macros/web/get_url_host.sql
2021-12-01 09:07:26.722184 (MainThread): Parsing macros/web/get_url_path.sql
2021-12-01 09:07:26.724921 (MainThread): Parsing macros/web/get_url_parameter.sql
2021-12-01 09:07:26.726777 (MainThread): Parsing macros/jinja_helpers/pretty_log_format.sql
2021-12-01 09:07:26.727930 (MainThread): Parsing macros/jinja_helpers/pretty_time.sql
2021-12-01 09:07:26.729264 (MainThread): Parsing macros/jinja_helpers/log_info.sql
2021-12-01 09:07:26.730346 (MainThread): Parsing macros/jinja_helpers/slugify.sql
2021-12-01 09:07:26.731514 (MainThread): Parsing macros/schema_tests/fewer_rows_than.sql
2021-12-01 09:07:26.733150 (MainThread): Parsing macros/schema_tests/equal_rowcount.sql
2021-12-01 09:07:26.734818 (MainThread): Parsing macros/schema_tests/relationships_where.sql
2021-12-01 09:07:26.736962 (MainThread): Parsing macros/schema_tests/recency.sql
2021-12-01 09:07:26.738954 (MainThread): Parsing macros/schema_tests/not_constant.sql
2021-12-01 09:07:26.740233 (MainThread): Parsing macros/schema_tests/accepted_range.sql
2021-12-01 09:07:26.742757 (MainThread): Parsing macros/schema_tests/not_accepted_values.sql
2021-12-01 09:07:26.744974 (MainThread): Parsing macros/schema_tests/test_unique_where.sql
2021-12-01 09:07:26.746617 (MainThread): Parsing macros/schema_tests/at_least_one.sql
2021-12-01 09:07:26.747961 (MainThread): Parsing macros/schema_tests/unique_combination_of_columns.sql
2021-12-01 09:07:26.750934 (MainThread): Parsing macros/schema_tests/cardinality_equality.sql
2021-12-01 09:07:26.752997 (MainThread): Parsing macros/schema_tests/expression_is_true.sql
2021-12-01 09:07:26.754788 (MainThread): Parsing macros/schema_tests/not_null_proportion.sql
2021-12-01 09:07:26.756967 (MainThread): Parsing macros/schema_tests/sequential_values.sql
2021-12-01 09:07:26.759960 (MainThread): Parsing macros/schema_tests/test_not_null_where.sql
2021-12-01 09:07:26.761372 (MainThread): Parsing macros/schema_tests/equality.sql
2021-12-01 09:07:26.765241 (MainThread): Parsing macros/schema_tests/mutually_exclusive_ranges.sql
2021-12-01 09:07:26.774041 (MainThread): Parsing macros/sql/date_spine.sql
2021-12-01 09:07:26.778927 (MainThread): Parsing macros/sql/nullcheck_table.sql
2021-12-01 09:07:26.780545 (MainThread): Parsing macros/sql/get_relations_by_pattern.sql
2021-12-01 09:07:26.784242 (MainThread): Parsing macros/sql/generate_series.sql
2021-12-01 09:07:26.788512 (MainThread): Parsing macros/sql/get_relations_by_prefix.sql
2021-12-01 09:07:26.792212 (MainThread): Parsing macros/sql/get_tables_by_prefix_sql.sql
2021-12-01 09:07:26.794063 (MainThread): Parsing macros/sql/star.sql
2021-12-01 09:07:26.798082 (MainThread): Parsing macros/sql/unpivot.sql
2021-12-01 09:07:26.806281 (MainThread): Parsing macros/sql/union.sql
2021-12-01 09:07:26.815336 (MainThread): Parsing macros/sql/groupby.sql
2021-12-01 09:07:26.816745 (MainThread): Parsing macros/sql/surrogate_key.sql
2021-12-01 09:07:26.820445 (MainThread): Parsing macros/sql/safe_add.sql
2021-12-01 09:07:26.822085 (MainThread): Parsing macros/sql/nullcheck.sql
2021-12-01 09:07:26.823702 (MainThread): Parsing macros/sql/get_tables_by_pattern_sql.sql
2021-12-01 09:07:26.830641 (MainThread): Parsing macros/sql/get_column_values.sql
2021-12-01 09:07:26.835489 (MainThread): Parsing macros/sql/pivot.sql
2021-12-01 09:07:26.839894 (MainThread): Parsing macros/sql/get_query_results_as_dict.sql
2021-12-01 09:07:26.842276 (MainThread): Parsing macros/sql/haversine_distance.sql
2021-12-01 09:07:26.848301 (MainThread): Parsing macros/enabled_vars.sql
2021-12-01 09:07:26.849332 (MainThread): Parsing macros/percentile.sql
2021-12-01 09:07:26.853116 (MainThread): Parsing macros/pivot_json_extract.sql
2021-12-01 09:07:26.854180 (MainThread): Parsing macros/persist_pass_through_columns.sql
2021-12-01 09:07:26.855255 (MainThread): Parsing macros/json_parse.sql
2021-12-01 09:07:26.861339 (MainThread): Parsing macros/max_bool.sql
2021-12-01 09:07:26.863030 (MainThread): Parsing macros/calculated_fields.sql
2021-12-01 09:07:26.863997 (MainThread): Parsing macros/seed_data_helper.sql
2021-12-01 09:07:26.865414 (MainThread): Parsing macros/fill_pass_through_columns.sql
2021-12-01 09:07:26.866953 (MainThread): Parsing macros/string_agg.sql
2021-12-01 09:07:26.869374 (MainThread): Parsing macros/timestamp_diff.sql
2021-12-01 09:07:26.880079 (MainThread): Parsing macros/generate_columns_macro.sql
2021-12-01 09:07:26.883533 (MainThread): Parsing macros/source_relation.sql
2021-12-01 09:07:26.885964 (MainThread): Parsing macros/first_value.sql
2021-12-01 09:07:26.888174 (MainThread): Parsing macros/add_dbt_source_relation.sql
2021-12-01 09:07:26.888899 (MainThread): Parsing macros/add_pass_through_columns.sql
2021-12-01 09:07:26.890853 (MainThread): Parsing macros/staging_models_automation.sql
2021-12-01 09:07:26.893548 (MainThread): Parsing macros/union_relations.sql
2021-12-01 09:07:26.903391 (MainThread): Parsing macros/snowflake_seed_data.sql
2021-12-01 09:07:26.904360 (MainThread): Parsing macros/get_columns_for_macro.sql
2021-12-01 09:07:26.908233 (MainThread): Parsing macros/fill_staging_columns.sql
2021-12-01 09:07:26.913122 (MainThread): Parsing macros/json_extract.sql
2021-12-01 09:07:26.916278 (MainThread): Parsing macros/collect_freshness.sql
2021-12-01 09:07:26.920223 (MainThread): Parsing macros/timestamp_add.sql
2021-12-01 09:07:26.923578 (MainThread): Parsing macros/ceiling.sql
2021-12-01 09:07:26.924795 (MainThread): Parsing macros/remove_prefix_from_columns.sql
2021-12-01 09:07:26.926493 (MainThread): Parsing macros/union_data.sql
2021-12-01 09:07:26.934232 (MainThread): Parsing macros/dummy_coalesce_value.sql
2021-12-01 09:07:26.937665 (MainThread): Parsing macros/array_agg.sql
2021-12-01 09:07:26.938909 (MainThread): Parsing macros/empty_variable_warning.sql
2021-12-01 09:07:26.940122 (MainThread): Parsing macros/enabled_vars_one_true.sql
2021-12-01 09:07:26.941153 (MainThread): Parsing macros/get_issue_columns.sql
2021-12-01 09:07:26.947365 (MainThread): Parsing macros/get_issue_comment_columns.sql
2021-12-01 09:07:26.949590 (MainThread): Parsing macros/get_repository_columns.sql
2021-12-01 09:07:26.952985 (MainThread): Parsing macros/get_issue_merged_columns.sql
2021-12-01 09:07:26.954631 (MainThread): Parsing macros/get_pull_request_review_columns.sql
2021-12-01 09:07:26.956954 (MainThread): Parsing macros/get_team_columns.sql
2021-12-01 09:07:26.959347 (MainThread): Parsing macros/get_issue_assignee_columns.sql
2021-12-01 09:07:26.961157 (MainThread): Parsing macros/get_user_columns.sql
2021-12-01 09:07:26.962833 (MainThread): Parsing macros/get_pull_request_columns.sql
2021-12-01 09:07:26.967818 (MainThread): Parsing macros/get_requested_reviewer_history_columns.sql
2021-12-01 09:07:26.969663 (MainThread): Parsing macros/get_issue_closed_history_columns.sql
2021-12-01 09:07:26.971481 (MainThread): Parsing macros/get_repo_team_columns.sql
2021-12-01 09:07:26.973033 (MainThread): Parsing macros/get_issue_label_columns.sql
2021-12-01 09:07:27.489894 (MainThread): Acquiring new bigquery connection "model.dbt_training.my_first_dbt_model".
2021-12-01 09:07:27.504311 (MainThread): Acquiring new bigquery connection "model.dbt_training.my_second_dbt_model".
2021-12-01 09:07:27.533895 (MainThread): Acquiring new bigquery connection "model.github.github__weekly_metrics".
2021-12-01 09:07:27.540442 (MainThread): Acquiring new bigquery connection "model.github.github__monthly_metrics".
2021-12-01 09:07:27.544835 (MainThread): Acquiring new bigquery connection "model.github.github__quarterly_metrics".
2021-12-01 09:07:27.549440 (MainThread): Acquiring new bigquery connection "model.github.github__pull_requests".
2021-12-01 09:07:27.553286 (MainThread): Acquiring new bigquery connection "model.github.github__daily_metrics".
2021-12-01 09:07:27.560565 (MainThread): Acquiring new bigquery connection "model.github.github__issues".
2021-12-01 09:07:27.565085 (MainThread): Acquiring new bigquery connection "model.github.int_github__pull_request_times".
2021-12-01 09:07:27.576936 (MainThread): Acquiring new bigquery connection "model.github.int_github__pull_request_reviewers".
2021-12-01 09:07:27.584044 (MainThread): Acquiring new bigquery connection "model.github.int_github__issue_joined".
2021-12-01 09:07:27.594269 (MainThread): Acquiring new bigquery connection "model.github.int_github__issue_labels".
2021-12-01 09:07:27.599168 (MainThread): Acquiring new bigquery connection "model.github.int_github__issue_assignees".
2021-12-01 09:07:27.603956 (MainThread): Acquiring new bigquery connection "model.github.int_github__issue_comments".
2021-12-01 09:07:27.608574 (MainThread): Acquiring new bigquery connection "model.github.int_github__issue_open_length".
2021-12-01 09:07:27.614097 (MainThread): Acquiring new bigquery connection "model.github.int_github__repository_teams".
2021-12-01 09:07:27.629067 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__issue_comment".
2021-12-01 09:07:27.646380 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.649977 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.650176 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.650362 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.650561 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.650740 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.650915 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.652914 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__requested_reviewer_history".
2021-12-01 09:07:27.660423 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.660633 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.660906 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.661082 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.661311 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.661638 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.663770 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__issue_label".
2021-12-01 09:07:27.669599 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.669797 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.669974 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.671980 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__issue_merged".
2021-12-01 09:07:27.678572 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.678906 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.679100 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.679278 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.679452 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.681425 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__issue_closed_history".
2021-12-01 09:07:27.688401 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.688604 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.688787 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.688972 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.689157 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.689339 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.692464 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__issue_assignee".
2021-12-01 09:07:27.698792 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.699009 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.699208 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.701379 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__repository".
2021-12-01 09:07:27.711736 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.712527 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.713098 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.713297 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.713482 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.713661 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.713869 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.714150 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.714325 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.714501 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.714675 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.714849 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.715052 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.717440 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__user".
2021-12-01 09:07:27.723880 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.724086 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.724268 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.724469 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.726708 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__pull_request_review".
2021-12-01 09:07:27.735329 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.735541 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.735723 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.735898 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.736069 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.736240 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.736411 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.736580 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.738533 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__repo_team".
2021-12-01 09:07:27.745685 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.745907 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.746087 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.746261 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.748110 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__issue".
2021-12-01 09:07:27.759716 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.759922 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.760107 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.760285 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.760462 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.760639 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.760973 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.761313 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.761721 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.761967 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.762149 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.762330 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.762552 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.762764 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.764906 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__team".
2021-12-01 09:07:27.773380 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.773580 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.773762 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.773988 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.774164 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.774339 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.774513 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.774733 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.776780 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__pull_request".
2021-12-01 09:07:27.788452 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.788654 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.788856 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.789040 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.789222 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.789403 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.789583 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.789763 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.789943 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.790284 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.790467 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.790643 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.790864 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.791037 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.793145 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__repository_tmp".
2021-12-01 09:07:27.798530 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__requested_reviewer_history_tmp".
2021-12-01 09:07:27.802960 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__issue_comment_tmp".
2021-12-01 09:07:27.808138 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__pull_request_review_tmp".
2021-12-01 09:07:27.813122 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__issue_label_tmp".
2021-12-01 09:07:27.817947 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__team_tmp".
2021-12-01 09:07:27.822390 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__pull_request_tmp".
2021-12-01 09:07:27.826926 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__issue_merged_tmp".
2021-12-01 09:07:27.831951 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__user_tmp".
2021-12-01 09:07:27.836789 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__issue_closed_history_tmp".
2021-12-01 09:07:27.865835 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__issue_assignee_tmp".
2021-12-01 09:07:27.871379 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__issue_tmp".
2021-12-01 09:07:27.876771 (MainThread): Acquiring new bigquery connection "model.github_source.stg_github__repo_team_tmp".
2021-12-01 09:07:27.957419 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.960131 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.962786 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:27.965349 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.016640 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.018727 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.020531 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.022297 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.024034 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.026036 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.027859 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.030002 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.031847 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.033956 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.035616 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.037303 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.121741 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.122090 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.126574 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.127070 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.128931 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.130955 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.132818 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.134832 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.136565 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.138563 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.140262 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.142012 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.144004 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.146291 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.147964 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.149630 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.151517 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.153373 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.155110 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.156867 (MainThread): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:28.202874 (MainThread): Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e1836a0>]}
2021-12-01 09:07:28.239431 (MainThread): write_gpickle is deprecated and will be removed in 3.0.Use ``pickle.dump(G, path, protocol)``
2021-12-01 09:07:28.240744 (MainThread): Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e183730>]}
2021-12-01 09:07:28.241062 (MainThread): Found 42 models, 34 tests, 0 snapshots, 0 analyses, 460 macros, 0 operations, 0 seed files, 13 sources, 0 exposures
2021-12-01 09:07:28.265052 (MainThread): 
2021-12-01 09:07:28.265479 (MainThread): Acquiring new bigquery connection "master".
2021-12-01 09:07:28.268321 (ThreadPoolExecutor-0_0): Acquiring new bigquery connection "list_dbt-technical-training".
2021-12-01 09:07:28.268555 (ThreadPoolExecutor-0_0): Opening a new connection, currently in state init
2021-12-01 09:07:28.924582 (ThreadPoolExecutor-1_0): Acquiring new bigquery connection "list_dbt-technical-training_dbt_alice".
2021-12-01 09:07:28.924848 (ThreadPoolExecutor-1_0): Opening a new connection, currently in state closed
2021-12-01 09:07:28.929716 (ThreadPoolExecutor-1_0): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 09:07:29.480108 (MainThread): 12:07:29 | Concurrency: 1 threads (target='dev')
2021-12-01 09:07:29.480429 (MainThread): 12:07:29 | 
2021-12-01 09:07:29.484365 (Thread-1): Began running node model.dbt_training.my_first_dbt_model
2021-12-01 09:07:29.484817 (Thread-1): 12:07:29 | 1 of 34 START table model dbt_alice.my_first_dbt_model............... [RUN]
2021-12-01 09:07:29.485289 (Thread-1): Acquiring new bigquery connection "model.dbt_training.my_first_dbt_model".
2021-12-01 09:07:29.485513 (Thread-1): Compiling model.dbt_training.my_first_dbt_model
2021-12-01 09:07:29.489221 (Thread-1): Writing injected SQL for node "model.dbt_training.my_first_dbt_model"
2021-12-01 09:07:29.489827 (Thread-1): finished collecting timing info
2021-12-01 09:07:29.516940 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:29.522074 (Thread-1): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 09:07:30.099428 (Thread-1): Writing runtime SQL for node "model.dbt_training.my_first_dbt_model"
2021-12-01 09:07:30.099960 (Thread-1): On model.dbt_training.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.dbt_training.my_first_dbt_model"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`my_first_dbt_model`
  
  
  OPTIONS()
  as (
    /*
    Welcome to your first dbt model!
    Did you know that you can also configure models directly within SQL files?
    This will override configurations stated in dbt_project.yml

    Try changing "table" to "view" below
*/



with source_data as (

    select 1 as id
    union all
    select null as id

)

select *
from source_data

/*
    Uncomment the line below to remove records with null `id` values
*/

-- where id is not null
  );
    
2021-12-01 09:07:32.297223 (Thread-1): finished collecting timing info
2021-12-01 09:07:32.297755 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e328850>]}
2021-12-01 09:07:32.298194 (Thread-1): 12:07:32 | 1 of 34 OK created table model dbt_alice.my_first_dbt_model.......... [CREATE TABLE (2.0 rows, 0.0 Bytes processed) in 2.81s]
2021-12-01 09:07:32.298430 (Thread-1): Finished running node model.dbt_training.my_first_dbt_model
2021-12-01 09:07:32.298668 (Thread-1): Began running node model.github_source.stg_github__issue_assignee_tmp
2021-12-01 09:07:32.299124 (Thread-1): 12:07:32 | 2 of 34 START view model dbt_alice.stg_github__issue_assignee_tmp.... [RUN]
2021-12-01 09:07:32.299654 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__issue_assignee_tmp".
2021-12-01 09:07:32.299875 (Thread-1): Compiling model.github_source.stg_github__issue_assignee_tmp
2021-12-01 09:07:32.304553 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__issue_assignee_tmp"
2021-12-01 09:07:32.305554 (Thread-1): finished collecting timing info
2021-12-01 09:07:32.311391 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64886), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:32.311852 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64887), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:32.312132 (Thread-1): unclosed <ssl.SSLSocket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64888), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:32.312370 (Thread-1): unclosed <ssl.SSLSocket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64889), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:32.312645 (Thread-1): unclosed <ssl.SSLSocket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64890), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:32.312884 (Thread-1): unclosed <ssl.SSLSocket fd=19, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64891), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:32.331014 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__issue_assignee_tmp"
2021-12-01 09:07:32.331892 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:32.336559 (Thread-1): On model.github_source.stg_github__issue_assignee_tmp: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__issue_assignee_tmp"} */


  create or replace view `dbt-technical-training`.`dbt_alice`.`stg_github__issue_assignee_tmp`
  OPTIONS()
  as select *
from `dbt-technical-training`.`github`.`issue_assignee`;


2021-12-01 09:07:33.456673 (Thread-1): finished collecting timing info
2021-12-01 09:07:33.457185 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e2b5fa0>]}
2021-12-01 09:07:33.457602 (Thread-1): 12:07:33 | 2 of 34 OK created view model dbt_alice.stg_github__issue_assignee_tmp [OK in 1.16s]
2021-12-01 09:07:33.457830 (Thread-1): Finished running node model.github_source.stg_github__issue_assignee_tmp
2021-12-01 09:07:33.458059 (Thread-1): Began running node model.github_source.stg_github__issue_closed_history_tmp
2021-12-01 09:07:33.458437 (Thread-1): 12:07:33 | 3 of 34 START view model dbt_alice.stg_github__issue_closed_history_tmp [RUN]
2021-12-01 09:07:33.459081 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__issue_closed_history_tmp".
2021-12-01 09:07:33.459294 (Thread-1): Compiling model.github_source.stg_github__issue_closed_history_tmp
2021-12-01 09:07:33.463851 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__issue_closed_history_tmp"
2021-12-01 09:07:33.464527 (Thread-1): finished collecting timing info
2021-12-01 09:07:33.469102 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__issue_closed_history_tmp"
2021-12-01 09:07:33.469706 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:33.474366 (Thread-1): On model.github_source.stg_github__issue_closed_history_tmp: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__issue_closed_history_tmp"} */


  create or replace view `dbt-technical-training`.`dbt_alice`.`stg_github__issue_closed_history_tmp`
  OPTIONS()
  as select *
from `dbt-technical-training`.`github`.`issue_closed_history`;


2021-12-01 09:07:34.426470 (Thread-1): finished collecting timing info
2021-12-01 09:07:34.427164 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e2b5fa0>]}
2021-12-01 09:07:34.427678 (Thread-1): 12:07:34 | 3 of 34 OK created view model dbt_alice.stg_github__issue_closed_history_tmp [OK in 0.97s]
2021-12-01 09:07:34.427941 (Thread-1): Finished running node model.github_source.stg_github__issue_closed_history_tmp
2021-12-01 09:07:34.428207 (Thread-1): Began running node model.github_source.stg_github__issue_comment_tmp
2021-12-01 09:07:34.428765 (Thread-1): 12:07:34 | 4 of 34 START view model dbt_alice.stg_github__issue_comment_tmp..... [RUN]
2021-12-01 09:07:34.429207 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__issue_comment_tmp".
2021-12-01 09:07:34.429552 (Thread-1): Compiling model.github_source.stg_github__issue_comment_tmp
2021-12-01 09:07:34.430339 (Thread-1): unclosed <ssl.SSLSocket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64895), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:34.430647 (Thread-1): unclosed <ssl.SSLSocket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64896), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:34.434952 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__issue_comment_tmp"
2021-12-01 09:07:34.435554 (Thread-1): finished collecting timing info
2021-12-01 09:07:34.439013 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__issue_comment_tmp"
2021-12-01 09:07:34.439875 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:34.470010 (Thread-1): On model.github_source.stg_github__issue_comment_tmp: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__issue_comment_tmp"} */


  create or replace view `dbt-technical-training`.`dbt_alice`.`stg_github__issue_comment_tmp`
  OPTIONS()
  as select *
from `dbt-technical-training`.`github`.`issue_comment`;


2021-12-01 09:07:35.571942 (Thread-1): finished collecting timing info
2021-12-01 09:07:35.572510 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e43fe50>]}
2021-12-01 09:07:35.572975 (Thread-1): 12:07:35 | 4 of 34 OK created view model dbt_alice.stg_github__issue_comment_tmp [OK in 1.14s]
2021-12-01 09:07:35.573230 (Thread-1): Finished running node model.github_source.stg_github__issue_comment_tmp
2021-12-01 09:07:35.573506 (Thread-1): Began running node model.github_source.stg_github__issue_label_tmp
2021-12-01 09:07:35.573978 (Thread-1): 12:07:35 | 5 of 34 START view model dbt_alice.stg_github__issue_label_tmp....... [RUN]
2021-12-01 09:07:35.574372 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__issue_label_tmp".
2021-12-01 09:07:35.574695 (Thread-1): Compiling model.github_source.stg_github__issue_label_tmp
2021-12-01 09:07:35.575559 (Thread-1): unclosed <ssl.SSLSocket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64897), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:35.575875 (Thread-1): unclosed <ssl.SSLSocket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64898), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:35.580296 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__issue_label_tmp"
2021-12-01 09:07:35.580882 (Thread-1): finished collecting timing info
2021-12-01 09:07:35.584754 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64893), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:35.585134 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64894), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:35.586109 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__issue_label_tmp"
2021-12-01 09:07:35.586695 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:35.591270 (Thread-1): On model.github_source.stg_github__issue_label_tmp: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__issue_label_tmp"} */


  create or replace view `dbt-technical-training`.`dbt_alice`.`stg_github__issue_label_tmp`
  OPTIONS()
  as select *
from `dbt-technical-training`.`github`.`issue_label`;


2021-12-01 09:07:36.701845 (Thread-1): finished collecting timing info
2021-12-01 09:07:36.702415 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e406340>]}
2021-12-01 09:07:36.702891 (Thread-1): 12:07:36 | 5 of 34 OK created view model dbt_alice.stg_github__issue_label_tmp.. [OK in 1.13s]
2021-12-01 09:07:36.703149 (Thread-1): Finished running node model.github_source.stg_github__issue_label_tmp
2021-12-01 09:07:36.703408 (Thread-1): Began running node model.github_source.stg_github__issue_merged_tmp
2021-12-01 09:07:36.703747 (Thread-1): 12:07:36 | 6 of 34 START view model dbt_alice.stg_github__issue_merged_tmp...... [RUN]
2021-12-01 09:07:36.704357 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__issue_merged_tmp".
2021-12-01 09:07:36.704749 (Thread-1): Compiling model.github_source.stg_github__issue_merged_tmp
2021-12-01 09:07:36.705585 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64899), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:36.705876 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64900), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:36.710360 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__issue_merged_tmp"
2021-12-01 09:07:36.710962 (Thread-1): finished collecting timing info
2021-12-01 09:07:36.714497 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__issue_merged_tmp"
2021-12-01 09:07:36.715063 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:36.719902 (Thread-1): On model.github_source.stg_github__issue_merged_tmp: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__issue_merged_tmp"} */


  create or replace view `dbt-technical-training`.`dbt_alice`.`stg_github__issue_merged_tmp`
  OPTIONS()
  as select *
from `dbt-technical-training`.`github`.`issue_merged`;


2021-12-01 09:07:37.830005 (Thread-1): finished collecting timing info
2021-12-01 09:07:37.830587 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e48efa0>]}
2021-12-01 09:07:37.831065 (Thread-1): 12:07:37 | 6 of 34 OK created view model dbt_alice.stg_github__issue_merged_tmp. [OK in 1.13s]
2021-12-01 09:07:37.831324 (Thread-1): Finished running node model.github_source.stg_github__issue_merged_tmp
2021-12-01 09:07:37.831584 (Thread-1): Began running node model.github_source.stg_github__issue_tmp
2021-12-01 09:07:37.832099 (Thread-1): 12:07:37 | 7 of 34 START view model dbt_alice.stg_github__issue_tmp............. [RUN]
2021-12-01 09:07:37.832534 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__issue_tmp".
2021-12-01 09:07:37.832882 (Thread-1): Compiling model.github_source.stg_github__issue_tmp
2021-12-01 09:07:37.833754 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64901), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:37.834048 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64902), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:37.838098 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__issue_tmp"
2021-12-01 09:07:37.838665 (Thread-1): finished collecting timing info
2021-12-01 09:07:37.841977 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__issue_tmp"
2021-12-01 09:07:37.842501 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:37.847145 (Thread-1): On model.github_source.stg_github__issue_tmp: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__issue_tmp"} */


  create or replace view `dbt-technical-training`.`dbt_alice`.`stg_github__issue_tmp`
  OPTIONS()
  as select *
from `dbt-technical-training`.`github`.`issue`;


2021-12-01 09:07:38.859522 (Thread-1): finished collecting timing info
2021-12-01 09:07:38.859956 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e183580>]}
2021-12-01 09:07:38.860298 (Thread-1): 12:07:38 | 7 of 34 OK created view model dbt_alice.stg_github__issue_tmp........ [OK in 1.03s]
2021-12-01 09:07:38.860525 (Thread-1): Finished running node model.github_source.stg_github__issue_tmp
2021-12-01 09:07:38.860784 (Thread-1): Began running node model.github_source.stg_github__pull_request_review_tmp
2021-12-01 09:07:38.861181 (Thread-1): 12:07:38 | 8 of 34 START view model dbt_alice.stg_github__pull_request_review_tmp [RUN]
2021-12-01 09:07:38.861600 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__pull_request_review_tmp".
2021-12-01 09:07:38.861774 (Thread-1): Compiling model.github_source.stg_github__pull_request_review_tmp
2021-12-01 09:07:38.862485 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64903), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:38.862740 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64904), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:38.866327 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__pull_request_review_tmp"
2021-12-01 09:07:38.866834 (Thread-1): finished collecting timing info
2021-12-01 09:07:38.876163 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__pull_request_review_tmp"
2021-12-01 09:07:38.876712 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:38.880681 (Thread-1): On model.github_source.stg_github__pull_request_review_tmp: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__pull_request_review_tmp"} */


  create or replace view `dbt-technical-training`.`dbt_alice`.`stg_github__pull_request_review_tmp`
  OPTIONS()
  as select *
from `dbt-technical-training`.`github`.`pull_request_review`;


2021-12-01 09:07:39.937808 (Thread-1): finished collecting timing info
2021-12-01 09:07:39.938511 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e511d00>]}
2021-12-01 09:07:39.938942 (Thread-1): 12:07:39 | 8 of 34 OK created view model dbt_alice.stg_github__pull_request_review_tmp [OK in 1.08s]
2021-12-01 09:07:39.939163 (Thread-1): Finished running node model.github_source.stg_github__pull_request_review_tmp
2021-12-01 09:07:39.939385 (Thread-1): Began running node model.github_source.stg_github__pull_request_tmp
2021-12-01 09:07:39.939867 (Thread-1): 12:07:39 | 9 of 34 START view model dbt_alice.stg_github__pull_request_tmp...... [RUN]
2021-12-01 09:07:39.940359 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__pull_request_tmp".
2021-12-01 09:07:39.940562 (Thread-1): Compiling model.github_source.stg_github__pull_request_tmp
2021-12-01 09:07:39.941605 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64909), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:39.941892 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64911), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:39.945700 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__pull_request_tmp"
2021-12-01 09:07:39.946249 (Thread-1): finished collecting timing info
2021-12-01 09:07:39.949337 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__pull_request_tmp"
2021-12-01 09:07:39.949865 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:39.954532 (Thread-1): On model.github_source.stg_github__pull_request_tmp: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__pull_request_tmp"} */


  create or replace view `dbt-technical-training`.`dbt_alice`.`stg_github__pull_request_tmp`
  OPTIONS()
  as select *
from `dbt-technical-training`.`github`.`pull_request`;


2021-12-01 09:07:40.883728 (Thread-1): finished collecting timing info
2021-12-01 09:07:40.884565 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e51c370>]}
2021-12-01 09:07:40.885072 (Thread-1): 12:07:40 | 9 of 34 OK created view model dbt_alice.stg_github__pull_request_tmp. [OK in 0.94s]
2021-12-01 09:07:40.885340 (Thread-1): Finished running node model.github_source.stg_github__pull_request_tmp
2021-12-01 09:07:40.885612 (Thread-1): Began running node model.github_source.stg_github__repo_team_tmp
2021-12-01 09:07:40.886121 (Thread-1): 12:07:40 | 10 of 34 START view model dbt_alice.stg_github__repo_team_tmp........ [RUN]
2021-12-01 09:07:40.886723 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__repo_team_tmp".
2021-12-01 09:07:40.886973 (Thread-1): Compiling model.github_source.stg_github__repo_team_tmp
2021-12-01 09:07:40.892175 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__repo_team_tmp"
2021-12-01 09:07:40.892790 (Thread-1): finished collecting timing info
2021-12-01 09:07:40.896511 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__repo_team_tmp"
2021-12-01 09:07:40.897080 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:40.901781 (Thread-1): On model.github_source.stg_github__repo_team_tmp: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__repo_team_tmp"} */


  create or replace view `dbt-technical-training`.`dbt_alice`.`stg_github__repo_team_tmp`
  OPTIONS()
  as 

select * 
from `dbt-technical-training`.`github`.`repo_team`;


2021-12-01 09:07:42.158243 (Thread-1): finished collecting timing info
2021-12-01 09:07:42.158817 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e1831f0>]}
2021-12-01 09:07:42.159288 (Thread-1): 12:07:42 | 10 of 34 OK created view model dbt_alice.stg_github__repo_team_tmp... [OK in 1.27s]
2021-12-01 09:07:42.159552 (Thread-1): Finished running node model.github_source.stg_github__repo_team_tmp
2021-12-01 09:07:42.159817 (Thread-1): Began running node model.github_source.stg_github__repository_tmp
2021-12-01 09:07:42.160332 (Thread-1): 12:07:42 | 11 of 34 START view model dbt_alice.stg_github__repository_tmp....... [RUN]
2021-12-01 09:07:42.161133 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__repository_tmp".
2021-12-01 09:07:42.161392 (Thread-1): Compiling model.github_source.stg_github__repository_tmp
2021-12-01 09:07:42.166074 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__repository_tmp"
2021-12-01 09:07:42.166689 (Thread-1): finished collecting timing info
2021-12-01 09:07:42.170143 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__repository_tmp"
2021-12-01 09:07:42.170674 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:42.175494 (Thread-1): On model.github_source.stg_github__repository_tmp: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__repository_tmp"} */


  create or replace view `dbt-technical-training`.`dbt_alice`.`stg_github__repository_tmp`
  OPTIONS()
  as select *
from `dbt-technical-training`.`github`.`repository`;


2021-12-01 09:07:43.313870 (Thread-1): finished collecting timing info
2021-12-01 09:07:43.314464 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e49dfa0>]}
2021-12-01 09:07:43.314938 (Thread-1): 12:07:43 | 11 of 34 OK created view model dbt_alice.stg_github__repository_tmp.. [OK in 1.15s]
2021-12-01 09:07:43.315204 (Thread-1): Finished running node model.github_source.stg_github__repository_tmp
2021-12-01 09:07:43.315473 (Thread-1): Began running node model.github_source.stg_github__requested_reviewer_history_tmp
2021-12-01 09:07:43.316120 (Thread-1): 12:07:43 | 12 of 34 START view model dbt_alice.stg_github__requested_reviewer_history_tmp [RUN]
2021-12-01 09:07:43.316519 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__requested_reviewer_history_tmp".
2021-12-01 09:07:43.316732 (Thread-1): Compiling model.github_source.stg_github__requested_reviewer_history_tmp
2021-12-01 09:07:43.318220 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64914), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:43.318535 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64915), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:43.318805 (Thread-1): unclosed <ssl.SSLSocket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64916), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:43.319046 (Thread-1): unclosed <ssl.SSLSocket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64917), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:43.319325 (Thread-1): unclosed <ssl.SSLSocket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64918), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:43.319565 (Thread-1): unclosed <ssl.SSLSocket fd=19, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64919), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:43.324182 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__requested_reviewer_history_tmp"
2021-12-01 09:07:43.324744 (Thread-1): finished collecting timing info
2021-12-01 09:07:43.328349 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__requested_reviewer_history_tmp"
2021-12-01 09:07:43.328938 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:43.333736 (Thread-1): On model.github_source.stg_github__requested_reviewer_history_tmp: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__requested_reviewer_history_tmp"} */


  create or replace view `dbt-technical-training`.`dbt_alice`.`stg_github__requested_reviewer_history_tmp`
  OPTIONS()
  as select *
from `dbt-technical-training`.`github`.`requested_reviewer_history`;


2021-12-01 09:07:44.424045 (Thread-1): finished collecting timing info
2021-12-01 09:07:44.424731 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e556d60>]}
2021-12-01 09:07:44.425246 (Thread-1): 12:07:44 | 12 of 34 OK created view model dbt_alice.stg_github__requested_reviewer_history_tmp [OK in 1.11s]
2021-12-01 09:07:44.425540 (Thread-1): Finished running node model.github_source.stg_github__requested_reviewer_history_tmp
2021-12-01 09:07:44.425781 (Thread-1): Began running node model.github_source.stg_github__team_tmp
2021-12-01 09:07:44.426246 (Thread-1): 12:07:44 | 13 of 34 START view model dbt_alice.stg_github__team_tmp............. [RUN]
2021-12-01 09:07:44.426666 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__team_tmp".
2021-12-01 09:07:44.427008 (Thread-1): Compiling model.github_source.stg_github__team_tmp
2021-12-01 09:07:44.427758 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64920), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:44.428103 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64921), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:44.432376 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__team_tmp"
2021-12-01 09:07:44.432927 (Thread-1): finished collecting timing info
2021-12-01 09:07:44.436344 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__team_tmp"
2021-12-01 09:07:44.436913 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:44.441444 (Thread-1): On model.github_source.stg_github__team_tmp: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__team_tmp"} */


  create or replace view `dbt-technical-training`.`dbt_alice`.`stg_github__team_tmp`
  OPTIONS()
  as select * 
from `dbt-technical-training`.`github`.`team`;


2021-12-01 09:07:45.537002 (Thread-1): finished collecting timing info
2021-12-01 09:07:45.537603 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e511d00>]}
2021-12-01 09:07:45.538081 (Thread-1): 12:07:45 | 13 of 34 OK created view model dbt_alice.stg_github__team_tmp........ [OK in 1.11s]
2021-12-01 09:07:45.538346 (Thread-1): Finished running node model.github_source.stg_github__team_tmp
2021-12-01 09:07:45.538613 (Thread-1): Began running node model.github_source.stg_github__user_tmp
2021-12-01 09:07:45.539122 (Thread-1): 12:07:45 | 14 of 34 START view model dbt_alice.stg_github__user_tmp............. [RUN]
2021-12-01 09:07:45.539508 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__user_tmp".
2021-12-01 09:07:45.539721 (Thread-1): Compiling model.github_source.stg_github__user_tmp
2021-12-01 09:07:45.540513 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64922), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:45.540836 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64923), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:45.545253 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__user_tmp"
2021-12-01 09:07:45.545852 (Thread-1): finished collecting timing info
2021-12-01 09:07:45.549449 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__user_tmp"
2021-12-01 09:07:45.550058 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:45.554781 (Thread-1): On model.github_source.stg_github__user_tmp: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__user_tmp"} */


  create or replace view `dbt-technical-training`.`dbt_alice`.`stg_github__user_tmp`
  OPTIONS()
  as select *
from `dbt-technical-training`.`github`.`user`;


2021-12-01 09:07:46.679787 (Thread-1): finished collecting timing info
2021-12-01 09:07:46.680366 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e59b250>]}
2021-12-01 09:07:46.680832 (Thread-1): 12:07:46 | 14 of 34 OK created view model dbt_alice.stg_github__user_tmp........ [OK in 1.14s]
2021-12-01 09:07:46.681093 (Thread-1): Finished running node model.github_source.stg_github__user_tmp
2021-12-01 09:07:46.681357 (Thread-1): Began running node model.dbt_training.my_second_dbt_model
2021-12-01 09:07:46.681849 (Thread-1): 12:07:46 | 15 of 34 START view model dbt_alice.my_second_dbt_model.............. [RUN]
2021-12-01 09:07:46.682411 (Thread-1): Acquiring new bigquery connection "model.dbt_training.my_second_dbt_model".
2021-12-01 09:07:46.682665 (Thread-1): Compiling model.dbt_training.my_second_dbt_model
2021-12-01 09:07:46.684172 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64924), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:46.684475 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64925), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:46.688003 (Thread-1): Writing injected SQL for node "model.dbt_training.my_second_dbt_model"
2021-12-01 09:07:46.688578 (Thread-1): finished collecting timing info
2021-12-01 09:07:46.691966 (Thread-1): Writing runtime SQL for node "model.dbt_training.my_second_dbt_model"
2021-12-01 09:07:46.692506 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:46.697221 (Thread-1): On model.dbt_training.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.dbt_training.my_second_dbt_model"} */


  create or replace view `dbt-technical-training`.`dbt_alice`.`my_second_dbt_model`
  OPTIONS()
  as -- Use the `ref` function to select from other models

select *
from `dbt-technical-training`.`dbt_alice`.`my_first_dbt_model`
where id = 1;


2021-12-01 09:07:47.783647 (Thread-1): finished collecting timing info
2021-12-01 09:07:47.784691 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e556d60>]}
2021-12-01 09:07:47.785191 (Thread-1): 12:07:47 | 15 of 34 OK created view model dbt_alice.my_second_dbt_model......... [OK in 1.10s]
2021-12-01 09:07:47.785456 (Thread-1): Finished running node model.dbt_training.my_second_dbt_model
2021-12-01 09:07:47.785722 (Thread-1): Began running node model.github_source.stg_github__issue_assignee
2021-12-01 09:07:47.786235 (Thread-1): 12:07:47 | 16 of 34 START table model dbt_alice.stg_github__issue_assignee...... [RUN]
2021-12-01 09:07:47.786618 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__issue_assignee".
2021-12-01 09:07:47.786816 (Thread-1): Compiling model.github_source.stg_github__issue_assignee
2021-12-01 09:07:47.787531 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64926), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:47.787816 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64927), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:47.792551 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:47.797519 (Thread-1): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 09:07:48.342385 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:48.342762 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:48.342983 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:48.343196 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:48.343598 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:48.343994 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:48.344548 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__issue_assignee"
2021-12-01 09:07:48.345316 (Thread-1): finished collecting timing info
2021-12-01 09:07:48.349123 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__issue_assignee"
2021-12-01 09:07:48.349655 (Thread-1): On model.github_source.stg_github__issue_assignee: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__issue_assignee"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`stg_github__issue_assignee`
  
  
  OPTIONS()
  as (
    with issue_assignee as (

    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue_assignee_tmp`

), macro as (
    select
        /*
        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns 
        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns 
        in the source (source_columns from dbt_github_source/macros/).

        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).
        */
            
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    issue_id
    
 as 
    
    issue_id
    
, 
    
    
    user_id
    
 as 
    
    user_id
    




    from issue_assignee

), fields as (

    select 
      issue_id,
      user_id
    from macro
)

select *
from fields
  );
    
2021-12-01 09:07:51.596755 (Thread-1): finished collecting timing info
2021-12-01 09:07:51.597344 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e556d60>]}
2021-12-01 09:07:51.597809 (Thread-1): 12:07:51 | 16 of 34 OK created table model dbt_alice.stg_github__issue_assignee. [CREATE TABLE (4.8k rows, 74.5 KB processed) in 3.81s]
2021-12-01 09:07:51.598070 (Thread-1): Finished running node model.github_source.stg_github__issue_assignee
2021-12-01 09:07:51.598332 (Thread-1): Began running node model.github_source.stg_github__issue_closed_history
2021-12-01 09:07:51.598801 (Thread-1): 12:07:51 | 17 of 34 START table model dbt_alice.stg_github__issue_closed_history [RUN]
2021-12-01 09:07:51.599230 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__issue_closed_history".
2021-12-01 09:07:51.599463 (Thread-1): Compiling model.github_source.stg_github__issue_closed_history
2021-12-01 09:07:51.604655 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:51.609658 (Thread-1): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 09:07:52.152938 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:52.153249 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:52.153469 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:52.153688 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:52.153895 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:52.154098 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:52.154304 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:52.154700 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:52.155096 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:52.155514 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:52.155878 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:52.156240 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:52.156716 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__issue_closed_history"
2021-12-01 09:07:52.157294 (Thread-1): finished collecting timing info
2021-12-01 09:07:52.160054 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64928), raddr=('173.194.73.95', 443)>
2021-12-01 09:07:52.160344 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64929), raddr=('209.85.233.95', 443)>
2021-12-01 09:07:52.162819 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__issue_closed_history"
2021-12-01 09:07:52.163379 (Thread-1): On model.github_source.stg_github__issue_closed_history: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__issue_closed_history"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`stg_github__issue_closed_history`
  
  
  OPTIONS()
  as (
    with issue_closed_history as (

    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue_closed_history_tmp`

), macro as (
    select
        /*
        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns 
        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns 
        in the source (source_columns from dbt_github_source/macros/).

        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).
        */
        
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    actor_id
    
 as 
    
    actor_id
    
, 
    
    
    closed
    
 as 
    
    closed
    
, 
    
    
    commit_sha
    
 as 
    
    commit_sha
    
, 
    
    
    issue_id
    
 as 
    
    issue_id
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    




    from issue_closed_history

), fields as (

    select 
      issue_id,
      updated_at,
      closed as is_closed

    from macro
)

select *
from fields
  );
    
2021-12-01 09:07:54.694179 (Thread-1): finished collecting timing info
2021-12-01 09:07:54.695042 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e2ac1c0>]}
2021-12-01 09:07:54.695609 (Thread-1): 12:07:54 | 17 of 34 OK created table model dbt_alice.stg_github__issue_closed_history [CREATE TABLE (1.8k rows, 29.3 KB processed) in 3.10s]
2021-12-01 09:07:54.695876 (Thread-1): Finished running node model.github_source.stg_github__issue_closed_history
2021-12-01 09:07:54.696142 (Thread-1): Began running node model.github_source.stg_github__issue_comment
2021-12-01 09:07:54.696618 (Thread-1): 12:07:54 | 18 of 34 START table model dbt_alice.stg_github__issue_comment....... [RUN]
2021-12-01 09:07:54.697051 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__issue_comment".
2021-12-01 09:07:54.697282 (Thread-1): Compiling model.github_source.stg_github__issue_comment
2021-12-01 09:07:54.702894 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:54.707998 (Thread-1): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 09:07:55.278407 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:55.278785 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:55.279036 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:55.279482 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:55.279696 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:55.279903 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:55.280109 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:55.280313 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:55.280706 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:55.281101 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:55.281489 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:55.281889 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:55.282242 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:55.282590 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:55.283084 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__issue_comment"
2021-12-01 09:07:55.283692 (Thread-1): finished collecting timing info
2021-12-01 09:07:55.287475 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__issue_comment"
2021-12-01 09:07:55.287980 (Thread-1): On model.github_source.stg_github__issue_comment: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__issue_comment"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`stg_github__issue_comment`
  
  
  OPTIONS()
  as (
    with issue_comment as (

    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue_comment_tmp`

), macro as (
    select
        /*
        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns 
        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns 
        in the source (source_columns from dbt_github_source/macros/).

        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).
        */
        
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    body
    
 as 
    
    body
    
, 
    
    
    created_at
    
 as 
    
    created_at
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    issue_id
    
 as 
    
    issue_id
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    
, 
    
    
    user_id
    
 as 
    
    user_id
    




    from issue_comment

), fields as (

    select 
      id as issue_comment_id,
      issue_id,
      user_id

    from macro
)

select *
from fields
  );
    
2021-12-01 09:07:58.258600 (Thread-1): finished collecting timing info
2021-12-01 09:07:58.259274 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e3d3bb0>]}
2021-12-01 09:07:58.259786 (Thread-1): 12:07:58 | 18 of 34 OK created table model dbt_alice.stg_github__issue_comment.. [CREATE TABLE (8.2k rows, 191.7 KB processed) in 3.56s]
2021-12-01 09:07:58.260056 (Thread-1): Finished running node model.github_source.stg_github__issue_comment
2021-12-01 09:07:58.260328 (Thread-1): Began running node model.github_source.stg_github__issue_label
2021-12-01 09:07:58.260680 (Thread-1): 12:07:58 | 19 of 34 START table model dbt_alice.stg_github__issue_label......... [RUN]
2021-12-01 09:07:58.261253 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__issue_label".
2021-12-01 09:07:58.261516 (Thread-1): Compiling model.github_source.stg_github__issue_label
2021-12-01 09:07:58.266792 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:07:58.271661 (Thread-1): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 09:07:58.813856 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:58.814154 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:58.814373 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:58.814587 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:58.814984 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:58.815373 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:07:58.815845 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__issue_label"
2021-12-01 09:07:58.816417 (Thread-1): finished collecting timing info
2021-12-01 09:07:58.820230 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__issue_label"
2021-12-01 09:07:58.820759 (Thread-1): On model.github_source.stg_github__issue_label: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__issue_label"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`stg_github__issue_label`
  
  
  OPTIONS()
  as (
    with issue_label as (

    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue_label_tmp`

), macro as (
    select
        /*
        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns 
        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns 
        in the source (source_columns from dbt_github_source/macros/).

        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).
        */
            
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    label
    
 as 
    
    label
    
, 
    
    
    issue_id
    
 as 
    
    issue_id
    




    from issue_label

), fields as (

    select 
      issue_id,
      label
    from macro
)

select *
from fields
  );
    
2021-12-01 09:08:01.282828 (Thread-1): finished collecting timing info
2021-12-01 09:08:01.283340 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e6f6ee0>]}
2021-12-01 09:08:01.283749 (Thread-1): 12:08:01 | 19 of 34 OK created table model dbt_alice.stg_github__issue_label.... [CREATE TABLE (10.0k rows, 231.5 KB processed) in 3.02s]
2021-12-01 09:08:01.283967 (Thread-1): Finished running node model.github_source.stg_github__issue_label
2021-12-01 09:08:01.284182 (Thread-1): Began running node model.github_source.stg_github__issue_merged
2021-12-01 09:08:01.284640 (Thread-1): 12:08:01 | 20 of 34 START table model dbt_alice.stg_github__issue_merged........ [RUN]
2021-12-01 09:08:01.285133 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__issue_merged".
2021-12-01 09:08:01.285364 (Thread-1): Compiling model.github_source.stg_github__issue_merged
2021-12-01 09:08:01.289677 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:08:01.293703 (Thread-1): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 09:08:01.844913 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:01.845337 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:01.845629 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:01.845906 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:01.846126 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:01.846340 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:01.846718 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:01.847036 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:01.847364 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:01.847694 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:01.848721 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64932), raddr=('173.194.73.95', 443)>
2021-12-01 09:08:01.848995 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64933), raddr=('209.85.233.95', 443)>
2021-12-01 09:08:01.849272 (Thread-1): unclosed <ssl.SSLSocket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64937), raddr=('173.194.73.95', 443)>
2021-12-01 09:08:01.849497 (Thread-1): unclosed <ssl.SSLSocket fd=19, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64938), raddr=('209.85.233.95', 443)>
2021-12-01 09:08:01.850203 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__issue_merged"
2021-12-01 09:08:01.850727 (Thread-1): finished collecting timing info
2021-12-01 09:08:01.853857 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__issue_merged"
2021-12-01 09:08:01.854298 (Thread-1): On model.github_source.stg_github__issue_merged: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__issue_merged"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`stg_github__issue_merged`
  
  
  OPTIONS()
  as (
    with issue_merged as (

    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue_merged_tmp`

), macro as (
    select
        /*
        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns 
        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns 
        in the source (source_columns from dbt_github_source/macros/).

        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).
        */
        
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    actor_id
    
 as 
    
    actor_id
    
, 
    
    
    commit_sha
    
 as 
    
    commit_sha
    
, 
    
    
    issue_id
    
 as 
    
    issue_id
    
, 
    
    
    merged_at
    
 as 
    
    merged_at
    




    from issue_merged

), fields as (

    select 
      issue_id,
      merged_at

    from macro
)

select *
from fields
  );
    
2021-12-01 09:08:04.885995 (Thread-1): finished collecting timing info
2021-12-01 09:08:04.887754 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e4992b0>]}
2021-12-01 09:08:04.888478 (Thread-1): 12:08:04 | 20 of 34 OK created table model dbt_alice.stg_github__issue_merged... [CREATE TABLE (1.5k rows, 23.7 KB processed) in 3.60s]
2021-12-01 09:08:04.888832 (Thread-1): Finished running node model.github_source.stg_github__issue_merged
2021-12-01 09:08:04.889195 (Thread-1): Began running node model.github_source.stg_github__issue
2021-12-01 09:08:04.889765 (Thread-1): 12:08:04 | 21 of 34 START table model dbt_alice.stg_github__issue............... [RUN]
2021-12-01 09:08:04.890203 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__issue".
2021-12-01 09:08:04.890437 (Thread-1): Compiling model.github_source.stg_github__issue
2021-12-01 09:08:04.896010 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:08:04.900348 (Thread-1): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 09:08:05.435619 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.435910 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.436124 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.436333 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.436534 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.436736 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.436940 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.437163 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.437368 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.437579 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.437744 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.437916 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.438091 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.438265 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.438439 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.438953 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.439283 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.439600 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.439922 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.440235 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.440547 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.440861 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.441187 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.441518 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.441851 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.442188 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.442519 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.442860 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:05.443318 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__issue"
2021-12-01 09:08:05.443919 (Thread-1): finished collecting timing info
2021-12-01 09:08:05.447846 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__issue"
2021-12-01 09:08:05.448364 (Thread-1): On model.github_source.stg_github__issue: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__issue"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`stg_github__issue`
  
  
  OPTIONS()
  as (
    with issue as (

    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue_tmp`

), macro as (
    select
        /*
        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns 
        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns 
        in the source (source_columns from dbt_github_source/macros/).

        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).
        */
            
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    body
    
 as 
    
    body
    
, 
    
    
    closed_at
    
 as 
    
    closed_at
    
, 
    
    
    created_at
    
 as 
    
    created_at
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    locked
    
 as 
    
    locked
    
, 
    
    
    milestone_id
    
 as 
    
    milestone_id
    
, 
    
    
    number
    
 as 
    
    number
    
, 
    
    
    pull_request
    
 as 
    
    pull_request
    
, 
    
    
    repository_id
    
 as 
    
    repository_id
    
, 
    
    
    state
    
 as 
    
    state
    
, 
    
    
    title
    
 as 
    
    title
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    
, 
    
    
    user_id
    
 as 
    
    user_id
    




    from issue 

), fields as (

    select 
      id as issue_id,
      body,
      closed_at,
      created_at,
      locked as is_locked,
      milestone_id,
      number as issue_number,
      pull_request as is_pull_request,
      repository_id,
      state,
      title,
      updated_at,
      user_id
      
    from macro
)

select *
from fields
  );
    
2021-12-01 09:08:08.329200 (Thread-1): finished collecting timing info
2021-12-01 09:08:08.329726 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e40dd30>]}
2021-12-01 09:08:08.330130 (Thread-1): 12:08:08 | 21 of 34 OK created table model dbt_alice.stg_github__issue.......... [CREATE TABLE (2.8k rows, 4.4 MB processed) in 3.44s]
2021-12-01 09:08:08.330353 (Thread-1): Finished running node model.github_source.stg_github__issue
2021-12-01 09:08:08.330577 (Thread-1): Began running node model.github_source.stg_github__pull_request_review
2021-12-01 09:08:08.331028 (Thread-1): 12:08:08 | 22 of 34 START table model dbt_alice.stg_github__pull_request_review. [RUN]
2021-12-01 09:08:08.331417 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__pull_request_review".
2021-12-01 09:08:08.331731 (Thread-1): Compiling model.github_source.stg_github__pull_request_review
2021-12-01 09:08:08.336823 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:08:08.341578 (Thread-1): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 09:08:08.882592 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:08.882895 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:08.883091 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:08.883272 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:08.883452 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:08.883628 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:08.883803 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:08.883985 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:08.884396 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:08.884741 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:08.885072 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:08.885400 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:08.885740 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:08.886092 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:08.886439 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:08.886777 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:08.887238 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__pull_request_review"
2021-12-01 09:08:08.887821 (Thread-1): finished collecting timing info
2021-12-01 09:08:08.892205 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64947), raddr=('173.194.73.95', 443)>
2021-12-01 09:08:08.892528 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64948), raddr=('209.85.233.95', 443)>
2021-12-01 09:08:08.893202 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__pull_request_review"
2021-12-01 09:08:08.893779 (Thread-1): On model.github_source.stg_github__pull_request_review: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__pull_request_review"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`stg_github__pull_request_review`
  
  
  OPTIONS()
  as (
    with pull_request_review as (

    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__pull_request_review_tmp`

), macro as (
    select
        /*
        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns 
        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns 
        in the source (source_columns from dbt_github_source/macros/).

        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).
        */
        
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    body
    
 as 
    
    body
    
, 
    
    
    commit_sha
    
 as 
    
    commit_sha
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    pull_request_id
    
 as 
    
    pull_request_id
    
, 
    
    
    state
    
 as 
    
    state
    
, 
    
    
    submitted_at
    
 as 
    
    submitted_at
    
, 
    
    
    user_id
    
 as 
    
    user_id
    




    from pull_request_review

), fields as (

    select 
      id as pull_request_review_id,
      pull_request_id,
      submitted_at,
      state,
      user_id

    from macro
)

select *
from fields
  );
    
2021-12-01 09:08:11.650391 (Thread-1): finished collecting timing info
2021-12-01 09:08:11.650965 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e7ee550>]}
2021-12-01 09:08:11.651432 (Thread-1): 12:08:11 | 22 of 34 OK created table model dbt_alice.stg_github__pull_request_review [CREATE TABLE (9.2k rows, 388.0 KB processed) in 3.32s]
2021-12-01 09:08:11.651687 (Thread-1): Finished running node model.github_source.stg_github__pull_request_review
2021-12-01 09:08:11.651945 (Thread-1): Began running node model.github_source.stg_github__pull_request
2021-12-01 09:08:11.652273 (Thread-1): 12:08:11 | 23 of 34 START table model dbt_alice.stg_github__pull_request........ [RUN]
2021-12-01 09:08:11.652810 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__pull_request".
2021-12-01 09:08:11.653038 (Thread-1): Compiling model.github_source.stg_github__pull_request
2021-12-01 09:08:11.657760 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:08:11.661893 (Thread-1): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 09:08:12.206922 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.207246 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.207486 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.207691 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.207892 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.208092 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.208289 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.208500 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.208674 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.208863 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.209032 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.209200 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.209367 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.209535 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.209701 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.209879 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.210230 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.210913 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.211267 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.211587 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.211901 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.212221 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.212536 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.212848 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.213174 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.213501 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.213830 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.214161 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.214490 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:12.214935 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__pull_request"
2021-12-01 09:08:12.215485 (Thread-1): finished collecting timing info
2021-12-01 09:08:12.219437 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__pull_request"
2021-12-01 09:08:12.219973 (Thread-1): On model.github_source.stg_github__pull_request: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__pull_request"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`stg_github__pull_request`
  
  
  OPTIONS()
  as (
    with pull_request as (

    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__pull_request_tmp`

), macro as (
    select
        /*
        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns 
        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns 
        in the source (source_columns from dbt_github_source/macros/).

        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).
        */
        
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    base_label
    
 as 
    
    base_label
    
, 
    
    
    base_ref
    
 as 
    
    base_ref
    
, 
    
    
    base_repo_id
    
 as 
    
    base_repo_id
    
, 
    
    
    base_sha
    
 as 
    
    base_sha
    
, 
    
    
    base_user_id
    
 as 
    
    base_user_id
    
, 
    
    
    head_label
    
 as 
    
    head_label
    
, 
    
    
    head_ref
    
 as 
    
    head_ref
    
, 
    
    
    head_repo_id
    
 as 
    
    head_repo_id
    
, 
    
    
    head_sha
    
 as 
    
    head_sha
    
, 
    
    
    head_user_id
    
 as 
    
    head_user_id
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    issue_id
    
 as 
    
    issue_id
    
, 
    
    
    merge_commit_sha
    
 as 
    
    merge_commit_sha
    




    from pull_request

), fields as (

    select 
      id as pull_request_id,
      issue_id,
      head_repo_id,
      head_user_id

    from macro
)

select *
from fields
  );
    
2021-12-01 09:08:14.677060 (Thread-1): finished collecting timing info
2021-12-01 09:08:14.677795 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e82b430>]}
2021-12-01 09:08:14.678390 (Thread-1): 12:08:14 | 23 of 34 OK created table model dbt_alice.stg_github__pull_request... [CREATE TABLE (2.8k rows, 87.4 KB processed) in 3.03s]
2021-12-01 09:08:14.678698 (Thread-1): Finished running node model.github_source.stg_github__pull_request
2021-12-01 09:08:14.679009 (Thread-1): Began running node model.github_source.stg_github__repo_team
2021-12-01 09:08:14.679511 (Thread-1): 12:08:14 | 24 of 34 START table model dbt_alice.stg_github__repo_team........... [RUN]
2021-12-01 09:08:14.679962 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__repo_team".
2021-12-01 09:08:14.680201 (Thread-1): Compiling model.github_source.stg_github__repo_team
2021-12-01 09:08:14.686258 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:08:14.691082 (Thread-1): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 09:08:15.233547 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:15.233837 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:15.234054 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:15.234266 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:15.234474 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:15.234870 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:15.235264 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:15.235656 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:15.236173 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__repo_team"
2021-12-01 09:08:15.236744 (Thread-1): finished collecting timing info
2021-12-01 09:08:15.240507 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__repo_team"
2021-12-01 09:08:15.241021 (Thread-1): On model.github_source.stg_github__repo_team: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__repo_team"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`stg_github__repo_team`
  
  
  OPTIONS()
  as (
    

with base as (

    select * 
    from `dbt-technical-training`.`dbt_alice`.`stg_github__repo_team_tmp`

),

fields as (

    select
        /*
        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns 
        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns 
        in the source (source_columns from dbt_github_source/macros/).

        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).
        */
        
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    permission
    
 as 
    
    permission
    
, 
    
    
    repository_id
    
 as 
    
    repository_id
    
, 
    
    
    team_id
    
 as 
    
    team_id
    



        
    from base
    
), final as (
    
    select 
        repository_id,
        team_id
    from fields
)

select * from final
  );
    
2021-12-01 09:08:17.750524 (Thread-1): finished collecting timing info
2021-12-01 09:08:17.751093 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e7af610>]}
2021-12-01 09:08:17.751567 (Thread-1): 12:08:17 | 24 of 34 OK created table model dbt_alice.stg_github__repo_team...... [CREATE TABLE (2.0 rows, 32.0 Bytes processed) in 3.07s]
2021-12-01 09:08:17.751829 (Thread-1): Finished running node model.github_source.stg_github__repo_team
2021-12-01 09:08:17.752091 (Thread-1): Began running node model.github_source.stg_github__repository
2021-12-01 09:08:17.752571 (Thread-1): 12:08:17 | 25 of 34 START table model dbt_alice.stg_github__repository.......... [RUN]
2021-12-01 09:08:17.753008 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__repository".
2021-12-01 09:08:17.753265 (Thread-1): Compiling model.github_source.stg_github__repository
2021-12-01 09:08:17.758812 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:08:17.763691 (Thread-1): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 09:08:18.317546 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64951), raddr=('173.194.73.95', 443)>
2021-12-01 09:08:18.317905 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64952), raddr=('209.85.233.95', 443)>
2021-12-01 09:08:18.318179 (Thread-1): unclosed <ssl.SSLSocket fd=22, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64954), raddr=('173.194.73.95', 443)>
2021-12-01 09:08:18.318424 (Thread-1): unclosed <ssl.SSLSocket fd=23, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64955), raddr=('209.85.233.95', 443)>
2021-12-01 09:08:18.320026 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.320235 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.320423 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.320612 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.320797 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.320984 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.321164 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.321340 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.321513 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.321685 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.321856 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.322037 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.322224 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.322407 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.322763 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.323114 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.323463 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.323853 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.324200 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.324554 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.324908 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.325261 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.325846 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.326178 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.326502 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.326826 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:18.327490 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__repository"
2021-12-01 09:08:18.328038 (Thread-1): finished collecting timing info
2021-12-01 09:08:18.331585 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__repository"
2021-12-01 09:08:18.332083 (Thread-1): On model.github_source.stg_github__repository: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__repository"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`stg_github__repository`
  
  
  OPTIONS()
  as (
    with repository as (

    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__repository_tmp`

), macro as (
    select
        /*
        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns 
        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns 
        in the source (source_columns from dbt_github_source/macros/).

        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).
        */
            
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    archived
    
 as 
    
    archived
    
, 
    
    
    created_at
    
 as 
    
    created_at
    
, 
    
    
    default_branch
    
 as 
    
    default_branch
    
, 
    
    
    description
    
 as 
    
    description
    
, 
    
    
    fork
    
 as 
    
    fork
    
, 
    
    
    full_name
    
 as 
    
    full_name
    
, 
    
    
    homepage
    
 as 
    
    homepage
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    language
    
 as 
    
    language
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    
    
    owner_id
    
 as 
    
    owner_id
    
, 
    
    
    private
    
 as 
    
    private
    




    from repository

), fields as (

    select 
      id as repository_id,
      full_name,
      private as is_private

    from macro
)

select *
from fields
  );
    
2021-12-01 09:08:20.824998 (Thread-1): finished collecting timing info
2021-12-01 09:08:20.825587 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e82b970>]}
2021-12-01 09:08:20.826071 (Thread-1): 12:08:20 | 25 of 34 OK created table model dbt_alice.stg_github__repository..... [CREATE TABLE (4.0 rows, 121.0 Bytes processed) in 3.07s]
2021-12-01 09:08:20.826363 (Thread-1): Finished running node model.github_source.stg_github__repository
2021-12-01 09:08:20.826660 (Thread-1): Began running node model.github_source.stg_github__requested_reviewer_history
2021-12-01 09:08:20.827072 (Thread-1): 12:08:20 | 26 of 34 START table model dbt_alice.stg_github__requested_reviewer_history [RUN]
2021-12-01 09:08:20.827437 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__requested_reviewer_history".
2021-12-01 09:08:20.827629 (Thread-1): Compiling model.github_source.stg_github__requested_reviewer_history
2021-12-01 09:08:20.832082 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:08:20.836216 (Thread-1): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 09:08:21.210120 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:21.210918 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:21.211160 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:21.211375 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:21.211581 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:21.211785 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:21.212004 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:21.212393 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:21.212776 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:21.213155 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:21.213527 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:21.213911 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:21.214427 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__requested_reviewer_history"
2021-12-01 09:08:21.214978 (Thread-1): finished collecting timing info
2021-12-01 09:08:21.218763 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__requested_reviewer_history"
2021-12-01 09:08:21.219280 (Thread-1): On model.github_source.stg_github__requested_reviewer_history: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__requested_reviewer_history"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`stg_github__requested_reviewer_history`
  
  
  OPTIONS()
  as (
    with requested_reviewer_history as (

    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__requested_reviewer_history_tmp`

), macro as (
    select
        /*
        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns 
        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns 
        in the source (source_columns from dbt_github_source/macros/).

        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).
        */
        
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    actor_id
    
 as 
    
    actor_id
    
, 
    
    
    created_at
    
 as 
    
    created_at
    
, 
    
    
    pull_request_id
    
 as 
    
    pull_request_id
    
, 
    
    
    removed
    
 as 
    
    removed
    
, 
    
    
    requested_id
    
 as 
    
    requested_id
    




    from requested_reviewer_history

), fields as (

    select 
      pull_request_id,
      created_at,
      requested_id,
      removed

    from macro
)

select *
from fields
  );
    
2021-12-01 09:08:23.865761 (Thread-1): finished collecting timing info
2021-12-01 09:08:23.866374 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e51eca0>]}
2021-12-01 09:08:23.866860 (Thread-1): 12:08:23 | 26 of 34 OK created table model dbt_alice.stg_github__requested_reviewer_history [CREATE TABLE (2.6k rows, 63.1 KB processed) in 3.04s]
2021-12-01 09:08:23.867126 (Thread-1): Finished running node model.github_source.stg_github__requested_reviewer_history
2021-12-01 09:08:23.867394 (Thread-1): Began running node model.github_source.stg_github__team
2021-12-01 09:08:23.867883 (Thread-1): 12:08:23 | 27 of 34 START table model dbt_alice.stg_github__team................ [RUN]
2021-12-01 09:08:23.868480 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__team".
2021-12-01 09:08:23.868737 (Thread-1): Compiling model.github_source.stg_github__team
2021-12-01 09:08:23.874203 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:08:23.879167 (Thread-1): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 09:08:24.418419 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:24.418732 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:24.418975 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:24.419204 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:24.419688 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:24.419919 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:24.420141 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:24.420361 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:24.420589 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:24.421006 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:24.421420 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:24.421830 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:24.422245 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:24.422667 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:24.423092 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:24.423516 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:24.424155 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__team"
2021-12-01 09:08:24.424855 (Thread-1): finished collecting timing info
2021-12-01 09:08:24.430215 (Thread-1): unclosed <ssl.SSLSocket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64958), raddr=('173.194.73.95', 443)>
2021-12-01 09:08:24.430609 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64959), raddr=('209.85.233.95', 443)>
2021-12-01 09:08:24.431419 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__team"
2021-12-01 09:08:24.432057 (Thread-1): On model.github_source.stg_github__team: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__team"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`stg_github__team`
  
  
  OPTIONS()
  as (
    with base as (

    select * 
    from `dbt-technical-training`.`dbt_alice`.`stg_github__team_tmp`

),

fields as (

    select
        /*
        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns 
        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns 
        in the source (source_columns from dbt_github_source/macros/).

        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).
        */
        
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    description
    
 as 
    
    description
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    
    
    org_id
    
 as 
    
    org_id
    
, 
    
    
    parent_id
    
 as 
    
    parent_id
    
, 
    
    
    privacy
    
 as 
    
    privacy
    
, 
    
    
    slug
    
 as 
    
    slug
    



        
    from base
    
), final as (
    
    select 
        id as team_id,
        description,
        name,
        parent_id,
        privacy,
        slug
    from fields
)

select * 
from final
  );
    
2021-12-01 09:08:28.646831 (Thread-1): finished collecting timing info
2021-12-01 09:08:28.647394 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e93b5b0>]}
2021-12-01 09:08:29.311261 (Thread-1): 12:08:29 | 27 of 34 OK created table model dbt_alice.stg_github__team........... [CREATE TABLE (116.0 rows, 8.8 KB processed) in 4.78s]
2021-12-01 09:08:29.311576 (Thread-1): Finished running node model.github_source.stg_github__team
2021-12-01 09:08:29.311847 (Thread-1): Began running node model.github_source.stg_github__user
2021-12-01 09:08:29.312364 (Thread-1): 12:08:29 | 28 of 34 START table model dbt_alice.stg_github__user................ [RUN]
2021-12-01 09:08:29.312952 (Thread-1): Acquiring new bigquery connection "model.github_source.stg_github__user".
2021-12-01 09:08:29.313189 (Thread-1): Compiling model.github_source.stg_github__user
2021-12-01 09:08:29.318616 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:08:29.323447 (Thread-1): Client.dataset is deprecated and will be removed in a future version. Use a string like 'my_project.my_dataset' or a cloud.google.bigquery.DatasetReference object, instead.
2021-12-01 09:08:29.870142 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.870428 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.870646 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.870856 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.871073 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.871276 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.871500 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.871675 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.871847 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.872017 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.872188 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.872359 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.872531 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.872714 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.873048 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.873378 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.873785 (Thread-1): 'soft_unicode' has been renamed to 'soft_str'. The old name will be removed in MarkupSafe 2.1.
2021-12-01 09:08:29.874496 (Thread-1): Writing injected SQL for node "model.github_source.stg_github__user"
2021-12-01 09:08:29.875051 (Thread-1): finished collecting timing info
2021-12-01 09:08:29.878757 (Thread-1): Writing runtime SQL for node "model.github_source.stg_github__user"
2021-12-01 09:08:29.879266 (Thread-1): On model.github_source.stg_github__user: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github_source.stg_github__user"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`stg_github__user`
  
  
  OPTIONS()
  as (
    with github_user as (

    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__user_tmp`

), macro as (
    select
        /*
        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns 
        that are expected/needed (staging_columns from dbt_github_source/models/tmp/) and compares it with columns 
        in the source (source_columns from dbt_github_source/macros/).

        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).
        */
            
    
    
    company
    
 as 
    
    company
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    login
    
 as 
    
    login
    
, 
    
    
    name
    
 as 
    
    name
    



        
        
    from github_user

), fields as (

    select
      id as user_id,
      login as login_name,
      name,
      company

    from macro
)

select *
from fields
  );
    
2021-12-01 09:08:32.289937 (Thread-1): finished collecting timing info
2021-12-01 09:08:32.290753 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e5e8790>]}
2021-12-01 09:08:32.291259 (Thread-1): 12:08:32 | 28 of 34 OK created table model dbt_alice.stg_github__user........... [CREATE TABLE (340.0 rows, 12.3 KB processed) in 2.98s]
2021-12-01 09:08:32.291519 (Thread-1): Finished running node model.github_source.stg_github__user
2021-12-01 09:08:32.291782 (Thread-1): Began running node model.github.int_github__issue_comments
2021-12-01 09:08:32.292377 (Thread-1): Acquiring new bigquery connection "model.github.int_github__issue_comments".
2021-12-01 09:08:32.292762 (Thread-1): Compiling model.github.int_github__issue_comments
2021-12-01 09:08:32.296657 (Thread-1): Writing injected SQL for node "model.github.int_github__issue_comments"
2021-12-01 09:08:32.297529 (Thread-1): finished collecting timing info
2021-12-01 09:08:32.297977 (Thread-1): Finished running node model.github.int_github__issue_comments
2021-12-01 09:08:32.298255 (Thread-1): Began running node model.github.int_github__issue_labels
2021-12-01 09:08:32.298800 (Thread-1): Acquiring new bigquery connection "model.github.int_github__issue_labels".
2021-12-01 09:08:32.299067 (Thread-1): Compiling model.github.int_github__issue_labels
2021-12-01 09:08:32.303363 (Thread-1): Writing injected SQL for node "model.github.int_github__issue_labels"
2021-12-01 09:08:32.303898 (Thread-1): finished collecting timing info
2021-12-01 09:08:32.304301 (Thread-1): Finished running node model.github.int_github__issue_labels
2021-12-01 09:08:32.304531 (Thread-1): Began running node model.github.int_github__issue_open_length
2021-12-01 09:08:32.304994 (Thread-1): Acquiring new bigquery connection "model.github.int_github__issue_open_length".
2021-12-01 09:08:32.305201 (Thread-1): Compiling model.github.int_github__issue_open_length
2021-12-01 09:08:32.310250 (Thread-1): Writing injected SQL for node "model.github.int_github__issue_open_length"
2021-12-01 09:08:32.310753 (Thread-1): finished collecting timing info
2021-12-01 09:08:32.311166 (Thread-1): Finished running node model.github.int_github__issue_open_length
2021-12-01 09:08:32.311396 (Thread-1): Began running node model.github.int_github__pull_request_times
2021-12-01 09:08:32.311756 (Thread-1): Acquiring new bigquery connection "model.github.int_github__pull_request_times".
2021-12-01 09:08:32.312049 (Thread-1): Compiling model.github.int_github__pull_request_times
2021-12-01 09:08:32.320488 (Thread-1): Writing injected SQL for node "model.github.int_github__pull_request_times"
2021-12-01 09:08:32.321005 (Thread-1): finished collecting timing info
2021-12-01 09:08:32.321409 (Thread-1): Finished running node model.github.int_github__pull_request_times
2021-12-01 09:08:32.321652 (Thread-1): Began running node model.github.int_github__repository_teams
2021-12-01 09:08:32.322039 (Thread-1): Acquiring new bigquery connection "model.github.int_github__repository_teams".
2021-12-01 09:08:32.322390 (Thread-1): Compiling model.github.int_github__repository_teams
2021-12-01 09:08:32.323666 (Thread-1): unclosed <ssl.SSLSocket fd=10, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64963), raddr=('173.194.73.95', 443)>
2021-12-01 09:08:32.323972 (Thread-1): unclosed <ssl.SSLSocket fd=26, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64964), raddr=('209.85.233.95', 443)>
2021-12-01 09:08:32.329219 (Thread-1): Writing injected SQL for node "model.github.int_github__repository_teams"
2021-12-01 09:08:32.329735 (Thread-1): finished collecting timing info
2021-12-01 09:08:32.330121 (Thread-1): Finished running node model.github.int_github__repository_teams
2021-12-01 09:08:32.330338 (Thread-1): Began running node model.github.int_github__issue_assignees
2021-12-01 09:08:32.330681 (Thread-1): Acquiring new bigquery connection "model.github.int_github__issue_assignees".
2021-12-01 09:08:32.330864 (Thread-1): Compiling model.github.int_github__issue_assignees
2021-12-01 09:08:32.334520 (Thread-1): Writing injected SQL for node "model.github.int_github__issue_assignees"
2021-12-01 09:08:32.334910 (Thread-1): finished collecting timing info
2021-12-01 09:08:32.335234 (Thread-1): Finished running node model.github.int_github__issue_assignees
2021-12-01 09:08:32.335421 (Thread-1): Began running node model.github.int_github__pull_request_reviewers
2021-12-01 09:08:32.335711 (Thread-1): Acquiring new bigquery connection "model.github.int_github__pull_request_reviewers".
2021-12-01 09:08:32.335876 (Thread-1): Compiling model.github.int_github__pull_request_reviewers
2021-12-01 09:08:32.339266 (Thread-1): Writing injected SQL for node "model.github.int_github__pull_request_reviewers"
2021-12-01 09:08:32.339687 (Thread-1): finished collecting timing info
2021-12-01 09:08:32.340029 (Thread-1): Finished running node model.github.int_github__pull_request_reviewers
2021-12-01 09:08:32.340668 (Thread-1): Began running node model.github.int_github__issue_joined
2021-12-01 09:08:32.341004 (Thread-1): Acquiring new bigquery connection "model.github.int_github__issue_joined".
2021-12-01 09:08:32.341230 (Thread-1): Compiling model.github.int_github__issue_joined
2021-12-01 09:08:32.375804 (Thread-1): Writing injected SQL for node "model.github.int_github__issue_joined"
2021-12-01 09:08:32.376596 (Thread-1): finished collecting timing info
2021-12-01 09:08:32.376981 (Thread-1): Finished running node model.github.int_github__issue_joined
2021-12-01 09:08:32.377410 (Thread-1): Began running node model.github.github__issues
2021-12-01 09:08:32.377637 (Thread-1): 12:08:32 | 29 of 34 START table model dbt_alice.github__issues.................. [RUN]
2021-12-01 09:08:32.377949 (Thread-1): Acquiring new bigquery connection "model.github.github__issues".
2021-12-01 09:08:32.378097 (Thread-1): Compiling model.github.github__issues
2021-12-01 09:08:32.389500 (Thread-1): Writing injected SQL for node "model.github.github__issues"
2021-12-01 09:08:32.389990 (Thread-1): finished collecting timing info
2021-12-01 09:08:32.394215 (Thread-1): Writing runtime SQL for node "model.github.github__issues"
2021-12-01 09:08:32.394822 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:08:32.398600 (Thread-1): On model.github.github__issues: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github.github__issues"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`github__issues`
  
  
  OPTIONS()
  as (
    with  __dbt__cte__int_github__issue_labels as (
with issue_label as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue_label`
)

select
  issue_id,
  
    string_agg(label, ', ')

 as labels
from issue_label
group by issue_id
),  __dbt__cte__int_github__repository_teams as (


with repository as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__repository`
),

repo_teams as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__repo_team`
),

teams as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__team`
),

team_repo as (
    select 
        repository.repository_id,
        repository.full_name as repository,
        teams.name as team_name
    from repository

    left join repo_teams
        on repository.repository_id = repo_teams.repository_id

    left join teams
        on repo_teams.team_id = teams.team_id
),

final as (
    select
        repository_id,
        repository,
        
    string_agg(team_name, ', ')

 as repository_team_names
    from team_repo

    group by 1, 2
)

select *
from final
),  __dbt__cte__int_github__issue_assignees as (
with issue_assignee as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue_assignee`
), 

github_user as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__user`
)

select
  issue_assignee.issue_id,
  
    string_agg(github_user.login_name, ', ')

 as assignees
from issue_assignee
join github_user on issue_assignee.user_id = github_user.user_id
group by 1
),  __dbt__cte__int_github__issue_open_length as (
with issue as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue`
), 

issue_closed_history as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue_closed_history`
), 

close_events_stacked as (
    select   
      issue_id,
      created_at as updated_at,
      false as is_closed
    from issue -- required because issue_closed_history table does not have a line item for when the issue was opened
    union all
    select
      issue_id,
      updated_at,
      is_closed
    from issue_closed_history
), 

close_events_with_timestamps as (
  select
    issue_id,
    updated_at as valid_starting,
    coalesce(lead(updated_at) over (partition by issue_id order by updated_at), 
    current_timestamp
) as valid_until,
    is_closed
  from close_events_stacked
)

select
  issue_id,
  sum(

    datetime_diff(
        cast(valid_until as datetime),
        cast(valid_starting as datetime),
        second
    )

) /60/60/24 as days_issue_open,
  count(*) - 1 as number_of_times_reopened
from close_events_with_timestamps
  where not is_closed
group by issue_id
),  __dbt__cte__int_github__issue_comments as (
with issue_comment as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue_label`
)

select
  issue_id,
  count(*) as number_of_comments
from issue_comment
group by issue_id
),  __dbt__cte__int_github__pull_request_times as (
with pull_request_review as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__pull_request_review`
), 

pull_request as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__pull_request`
), 

requested_reviewer_history as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__requested_reviewer_history`
    where not removed
), 

issue as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue`
), 

issue_merged as (
    select
      issue_id,
      min(merged_at) as merged_at
      from `dbt-technical-training`.`dbt_alice`.`stg_github__issue_merged`
    group by 1
), 

first_request_time as (
    select
      pull_request.issue_id,
      pull_request.pull_request_id,
      -- Finds the first review that is by the requested reviewer and is not a dismissal
      min(case when requested_reviewer_history.requested_id = pull_request_review.user_id then
          case when lower(pull_request_review.state) in ('commented', 'approved', 'changes_requested') 
                then pull_request_review.submitted_at end 
      else null end) as time_of_first_requested_reviewer_review,
      min(requested_reviewer_history.created_at) as time_of_first_request,
      min(pull_request_review.submitted_at) as time_of_first_review_post_request
    from pull_request
    join requested_reviewer_history on requested_reviewer_history.pull_request_id = pull_request.pull_request_id
    left join pull_request_review on pull_request_review.pull_request_id = pull_request.pull_request_id
      and pull_request_review.submitted_at > requested_reviewer_history.created_at
    group by 1, 2
)

select
  first_request_time.issue_id,
  issue_merged.merged_at,
  

    datetime_diff(
        cast(coalesce(time_of_first_review_post_request, 
    current_timestamp
) as datetime),
        cast(time_of_first_request as datetime),
        second
    )

/ 60/60 as hours_request_review_to_first_review,
  

    datetime_diff(
        cast(least(
                            coalesce(time_of_first_requested_reviewer_review, 
    current_timestamp
),
                            coalesce(issue.closed_at, 
    current_timestamp
)) as datetime),
        cast(time_of_first_request as datetime),
        second
    )

 / 60/60 as hours_request_review_to_first_action,
  

    datetime_diff(
        cast(merged_at as datetime),
        cast(time_of_first_request as datetime),
        second
    )

/ 60/60 as hours_request_review_to_merge
from first_request_time
join issue on first_request_time.issue_id = issue.issue_id
left join issue_merged on first_request_time.issue_id = issue_merged.issue_id
),  __dbt__cte__int_github__pull_request_reviewers as (
with pull_request_review as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__pull_request_review`
), 

github_user as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__user`
)

select
  pull_request_review.pull_request_id,
  
    string_agg(github_user.login_name, ', ')

 as reviewers,
  count(*) as number_of_reviews
from pull_request_review
left join github_user on pull_request_review.user_id = github_user.user_id
group by 1
),  __dbt__cte__int_github__issue_joined as (
with issue as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue`
), 

issue_labels as (
    select *
    from __dbt__cte__int_github__issue_labels
), 

repository_teams as (
    select 
    
      *
    from __dbt__cte__int_github__repository_teams

    
), 

issue_assignees as (
    select *
    from __dbt__cte__int_github__issue_assignees
), 

issue_open_length as (
    select *
    from __dbt__cte__int_github__issue_open_length
), 

issue_comments as (
    select *
    from __dbt__cte__int_github__issue_comments
), 

creator as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__user`
), 

pull_request_times as (
    select *
    from __dbt__cte__int_github__pull_request_times
), 

pull_request_reviewers as (
    select *
    from __dbt__cte__int_github__pull_request_reviewers
), 

pull_request as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__pull_request`
)

select
  issue.*,
  'https://github.com/' || repository_teams.repository || '/pull/' || issue.issue_number as url_link,
  issue_open_length.days_issue_open,
  issue_open_length.number_of_times_reopened,
  labels.labels,
  issue_comments.number_of_comments,
  repository_teams.repository,
  
  repository_teams.repository_team_names,
  
  issue_assignees.assignees,
  creator.login_name as creator_login_name,
  creator.name as creator_name,
  creator.company as creator_company,
  hours_request_review_to_first_review,
  hours_request_review_to_first_action,
  hours_request_review_to_merge,
  merged_at,
  reviewers,
  number_of_reviews
from issue
left join issue_labels as labels
  on issue.issue_id = labels.issue_id
join repository_teams
  on issue.repository_id = repository_teams.repository_id
left join issue_assignees
  on issue.issue_id = issue_assignees.issue_id
left join issue_open_length
  on issue.issue_id = issue_open_length.issue_id
left join issue_comments 
  on issue.issue_id = issue_comments.issue_id
left join creator 
  on issue.user_id = creator.user_id
left join pull_request
  on issue.issue_id = pull_request.issue_id
left join pull_request_times
  on issue.issue_id = pull_request_times.issue_id
left join pull_request_reviewers
  on pull_request.pull_request_id = pull_request_reviewers.pull_request_id
),issue_joined as (
    select *
    from __dbt__cte__int_github__issue_joined  
)

select
  issue_id,
  body,
  closed_at,
  created_at,
  is_locked,
  milestone_id,
  issue_number,
  is_pull_request,
  repository_id,
  state,
  title,
  updated_at,
  user_id,
  url_link,
  days_issue_open,
  number_of_times_reopened,
  labels,
  number_of_comments,
  repository,
  
  repository_team_names,
  
  assignees,
  creator_login_name,
  creator_name,
  creator_company
from issue_joined
where not is_pull_request
  );
    
2021-12-01 09:08:37.602074 (Thread-1): unclosed <ssl.SSLSocket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64930), raddr=('173.194.73.95', 443)>
2021-12-01 09:08:37.602509 (Thread-1): unclosed <ssl.SSLSocket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64931), raddr=('209.85.233.95', 443)>
2021-12-01 09:08:37.602955 (Thread-1): unclosed <ssl.SSLSocket fd=20, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64939), raddr=('173.194.73.95', 443)>
2021-12-01 09:08:37.603260 (Thread-1): unclosed <ssl.SSLSocket fd=21, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64940), raddr=('209.85.233.95', 443)>
2021-12-01 09:08:37.603655 (Thread-1): unclosed <ssl.SSLSocket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64949), raddr=('173.194.73.95', 443)>
2021-12-01 09:08:37.603951 (Thread-1): unclosed <ssl.SSLSocket fd=19, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64950), raddr=('209.85.233.95', 443)>
2021-12-01 09:08:37.604379 (Thread-1): unclosed <ssl.SSLSocket fd=24, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64956), raddr=('173.194.73.95', 443)>
2021-12-01 09:08:37.604672 (Thread-1): unclosed <ssl.SSLSocket fd=25, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64957), raddr=('209.85.233.95', 443)>
2021-12-01 09:08:37.605057 (Thread-1): unclosed <ssl.SSLSocket fd=22, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64960), raddr=('173.194.73.95', 443)>
2021-12-01 09:08:37.605360 (Thread-1): unclosed <ssl.SSLSocket fd=23, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64961), raddr=('209.85.233.95', 443)>
2021-12-01 09:08:37.874058 (Thread-1): finished collecting timing info
2021-12-01 09:08:37.874806 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ea79d30>]}
2021-12-01 09:08:37.875341 (Thread-1): 12:08:37 | 29 of 34 OK created table model dbt_alice.github__issues............. [CREATE TABLE (3.0 rows, 5.1 MB processed) in 5.50s]
2021-12-01 09:08:37.875611 (Thread-1): Finished running node model.github.github__issues
2021-12-01 09:08:37.875958 (Thread-1): Began running node model.github.github__pull_requests
2021-12-01 09:08:37.876451 (Thread-1): 12:08:37 | 30 of 34 START table model dbt_alice.github__pull_requests........... [RUN]
2021-12-01 09:08:37.877062 (Thread-1): Acquiring new bigquery connection "model.github.github__pull_requests".
2021-12-01 09:08:37.877298 (Thread-1): Compiling model.github.github__pull_requests
2021-12-01 09:08:37.885524 (Thread-1): Writing injected SQL for node "model.github.github__pull_requests"
2021-12-01 09:08:37.886102 (Thread-1): finished collecting timing info
2021-12-01 09:08:37.889401 (Thread-1): Writing runtime SQL for node "model.github.github__pull_requests"
2021-12-01 09:08:37.889842 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:08:37.893827 (Thread-1): On model.github.github__pull_requests: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github.github__pull_requests"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`github__pull_requests`
  
  
  OPTIONS()
  as (
    with  __dbt__cte__int_github__issue_labels as (
with issue_label as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue_label`
)

select
  issue_id,
  
    string_agg(label, ', ')

 as labels
from issue_label
group by issue_id
),  __dbt__cte__int_github__repository_teams as (


with repository as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__repository`
),

repo_teams as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__repo_team`
),

teams as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__team`
),

team_repo as (
    select 
        repository.repository_id,
        repository.full_name as repository,
        teams.name as team_name
    from repository

    left join repo_teams
        on repository.repository_id = repo_teams.repository_id

    left join teams
        on repo_teams.team_id = teams.team_id
),

final as (
    select
        repository_id,
        repository,
        
    string_agg(team_name, ', ')

 as repository_team_names
    from team_repo

    group by 1, 2
)

select *
from final
),  __dbt__cte__int_github__issue_assignees as (
with issue_assignee as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue_assignee`
), 

github_user as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__user`
)

select
  issue_assignee.issue_id,
  
    string_agg(github_user.login_name, ', ')

 as assignees
from issue_assignee
join github_user on issue_assignee.user_id = github_user.user_id
group by 1
),  __dbt__cte__int_github__issue_open_length as (
with issue as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue`
), 

issue_closed_history as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue_closed_history`
), 

close_events_stacked as (
    select   
      issue_id,
      created_at as updated_at,
      false as is_closed
    from issue -- required because issue_closed_history table does not have a line item for when the issue was opened
    union all
    select
      issue_id,
      updated_at,
      is_closed
    from issue_closed_history
), 

close_events_with_timestamps as (
  select
    issue_id,
    updated_at as valid_starting,
    coalesce(lead(updated_at) over (partition by issue_id order by updated_at), 
    current_timestamp
) as valid_until,
    is_closed
  from close_events_stacked
)

select
  issue_id,
  sum(

    datetime_diff(
        cast(valid_until as datetime),
        cast(valid_starting as datetime),
        second
    )

) /60/60/24 as days_issue_open,
  count(*) - 1 as number_of_times_reopened
from close_events_with_timestamps
  where not is_closed
group by issue_id
),  __dbt__cte__int_github__issue_comments as (
with issue_comment as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue_label`
)

select
  issue_id,
  count(*) as number_of_comments
from issue_comment
group by issue_id
),  __dbt__cte__int_github__pull_request_times as (
with pull_request_review as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__pull_request_review`
), 

pull_request as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__pull_request`
), 

requested_reviewer_history as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__requested_reviewer_history`
    where not removed
), 

issue as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue`
), 

issue_merged as (
    select
      issue_id,
      min(merged_at) as merged_at
      from `dbt-technical-training`.`dbt_alice`.`stg_github__issue_merged`
    group by 1
), 

first_request_time as (
    select
      pull_request.issue_id,
      pull_request.pull_request_id,
      -- Finds the first review that is by the requested reviewer and is not a dismissal
      min(case when requested_reviewer_history.requested_id = pull_request_review.user_id then
          case when lower(pull_request_review.state) in ('commented', 'approved', 'changes_requested') 
                then pull_request_review.submitted_at end 
      else null end) as time_of_first_requested_reviewer_review,
      min(requested_reviewer_history.created_at) as time_of_first_request,
      min(pull_request_review.submitted_at) as time_of_first_review_post_request
    from pull_request
    join requested_reviewer_history on requested_reviewer_history.pull_request_id = pull_request.pull_request_id
    left join pull_request_review on pull_request_review.pull_request_id = pull_request.pull_request_id
      and pull_request_review.submitted_at > requested_reviewer_history.created_at
    group by 1, 2
)

select
  first_request_time.issue_id,
  issue_merged.merged_at,
  

    datetime_diff(
        cast(coalesce(time_of_first_review_post_request, 
    current_timestamp
) as datetime),
        cast(time_of_first_request as datetime),
        second
    )

/ 60/60 as hours_request_review_to_first_review,
  

    datetime_diff(
        cast(least(
                            coalesce(time_of_first_requested_reviewer_review, 
    current_timestamp
),
                            coalesce(issue.closed_at, 
    current_timestamp
)) as datetime),
        cast(time_of_first_request as datetime),
        second
    )

 / 60/60 as hours_request_review_to_first_action,
  

    datetime_diff(
        cast(merged_at as datetime),
        cast(time_of_first_request as datetime),
        second
    )

/ 60/60 as hours_request_review_to_merge
from first_request_time
join issue on first_request_time.issue_id = issue.issue_id
left join issue_merged on first_request_time.issue_id = issue_merged.issue_id
),  __dbt__cte__int_github__pull_request_reviewers as (
with pull_request_review as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__pull_request_review`
), 

github_user as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__user`
)

select
  pull_request_review.pull_request_id,
  
    string_agg(github_user.login_name, ', ')

 as reviewers,
  count(*) as number_of_reviews
from pull_request_review
left join github_user on pull_request_review.user_id = github_user.user_id
group by 1
),  __dbt__cte__int_github__issue_joined as (
with issue as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__issue`
), 

issue_labels as (
    select *
    from __dbt__cte__int_github__issue_labels
), 

repository_teams as (
    select 
    
      *
    from __dbt__cte__int_github__repository_teams

    
), 

issue_assignees as (
    select *
    from __dbt__cte__int_github__issue_assignees
), 

issue_open_length as (
    select *
    from __dbt__cte__int_github__issue_open_length
), 

issue_comments as (
    select *
    from __dbt__cte__int_github__issue_comments
), 

creator as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__user`
), 

pull_request_times as (
    select *
    from __dbt__cte__int_github__pull_request_times
), 

pull_request_reviewers as (
    select *
    from __dbt__cte__int_github__pull_request_reviewers
), 

pull_request as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`stg_github__pull_request`
)

select
  issue.*,
  'https://github.com/' || repository_teams.repository || '/pull/' || issue.issue_number as url_link,
  issue_open_length.days_issue_open,
  issue_open_length.number_of_times_reopened,
  labels.labels,
  issue_comments.number_of_comments,
  repository_teams.repository,
  
  repository_teams.repository_team_names,
  
  issue_assignees.assignees,
  creator.login_name as creator_login_name,
  creator.name as creator_name,
  creator.company as creator_company,
  hours_request_review_to_first_review,
  hours_request_review_to_first_action,
  hours_request_review_to_merge,
  merged_at,
  reviewers,
  number_of_reviews
from issue
left join issue_labels as labels
  on issue.issue_id = labels.issue_id
join repository_teams
  on issue.repository_id = repository_teams.repository_id
left join issue_assignees
  on issue.issue_id = issue_assignees.issue_id
left join issue_open_length
  on issue.issue_id = issue_open_length.issue_id
left join issue_comments 
  on issue.issue_id = issue_comments.issue_id
left join creator 
  on issue.user_id = creator.user_id
left join pull_request
  on issue.issue_id = pull_request.issue_id
left join pull_request_times
  on issue.issue_id = pull_request_times.issue_id
left join pull_request_reviewers
  on pull_request.pull_request_id = pull_request_reviewers.pull_request_id
),issue_joined as (
    select *
    from __dbt__cte__int_github__issue_joined  
)

select
  *
from issue_joined
where is_pull_request
  );
    
2021-12-01 09:08:43.738820 (Thread-1): finished collecting timing info
2021-12-01 09:08:43.739416 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e025b80>]}
2021-12-01 09:08:43.739948 (Thread-1): 12:08:43 | 30 of 34 OK created table model dbt_alice.github__pull_requests...... [CREATE TABLE (2.8k rows, 5.2 MB processed) in 5.86s]
2021-12-01 09:08:43.740207 (Thread-1): Finished running node model.github.github__pull_requests
2021-12-01 09:08:43.740862 (Thread-1): Began running node model.github.github__daily_metrics
2021-12-01 09:08:43.741215 (Thread-1): 12:08:43 | 31 of 34 START table model dbt_alice.github__daily_metrics........... [RUN]
2021-12-01 09:08:43.741638 (Thread-1): Acquiring new bigquery connection "model.github.github__daily_metrics".
2021-12-01 09:08:43.741960 (Thread-1): Compiling model.github.github__daily_metrics
2021-12-01 09:08:43.750032 (Thread-1): Writing injected SQL for node "model.github.github__daily_metrics"
2021-12-01 09:08:43.750695 (Thread-1): finished collecting timing info
2021-12-01 09:08:43.754507 (Thread-1): Writing runtime SQL for node "model.github.github__daily_metrics"
2021-12-01 09:08:43.755030 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:08:43.759848 (Thread-1): On model.github.github__daily_metrics: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github.github__daily_metrics"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`github__daily_metrics`
  
  
  OPTIONS()
  as (
    with github_issues as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`github__issues`
), 

pull_requests as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`github__pull_requests`
), 

issues_opened_per_day as (
   select 
      
    timestamp_trunc(
        cast(created_at as timestamp),
        day
    )

 as day, 
      count(*) as number_issues_opened,
      sum(days_issue_open) as sum_days_issue_open,
      max(days_issue_open) as longest_days_issue_open
    from github_issues
    group by 1
), 

issues_closed_per_day as (
   select 
      
    timestamp_trunc(
        cast(closed_at as timestamp),
        day
    )

 as day, 
      count(*) as number_issues_closed
    from github_issues
    where closed_at is not null
    group by 1
), 

prs_opened_per_day as (
   select 
      
    timestamp_trunc(
        cast(created_at as timestamp),
        day
    )

 as day, 
      count(*) as number_prs_opened,
      sum(days_issue_open) as sum_days_pr_open,
      max(days_issue_open) as longest_days_pr_open
    from pull_requests
    group by 1
), 

prs_merged_per_day as (
   select 
      
    timestamp_trunc(
        cast(merged_at as timestamp),
        day
    )

 as day, 
      count(*) as number_prs_merged
    from pull_requests
    where merged_at is not null
    group by 1
), 

prs_closed_without_merge_per_day as (
   select 
      
    timestamp_trunc(
        cast(closed_at as timestamp),
        day
    )

 as day, 
      count(*) as number_prs_closed_without_merge
    from pull_requests
    where closed_at is not null
      and merged_at is null
    group by 1
), 

issues_per_day as (
    select 
      coalesce(issues_opened_per_day.day, 
        issues_closed_per_day.day
      ) as day,
      number_issues_opened,
      number_issues_closed,      
      sum_days_issue_open,
      longest_days_issue_open
    from issues_opened_per_day
    full outer join issues_closed_per_day on issues_opened_per_day.day = issues_closed_per_day.day
), 

prs_per_day as (
    select 
      coalesce(prs_opened_per_day.day, 
        prs_merged_per_day.day,
        prs_closed_without_merge_per_day.day
      ) as day,
      number_prs_opened,
      number_prs_merged,
      number_prs_closed_without_merge,
      sum_days_pr_open,
      longest_days_pr_open
    from prs_opened_per_day
    full outer join prs_merged_per_day on prs_opened_per_day.day = prs_merged_per_day.day
    full outer join prs_closed_without_merge_per_day on coalesce(prs_opened_per_day.day, prs_merged_per_day.day) = prs_closed_without_merge_per_day.day
)

select 
  coalesce(issues_per_day.day, prs_per_day.day) as day,
  coalesce(number_issues_opened, 0) as number_issues_opened,
  coalesce(number_issues_closed, 0) as number_issues_closed,
  sum_days_issue_open,
  longest_days_issue_open,
  coalesce(number_prs_opened, 0) as number_prs_opened,
  coalesce(number_prs_merged, 0) as number_prs_merged,
  coalesce(number_prs_closed_without_merge, 0) as number_prs_closed_without_merge,
  sum_days_pr_open,
  longest_days_pr_open
from issues_per_day 
full outer join prs_per_day on issues_per_day.day = prs_per_day.day
order by day desc
  );
    
2021-12-01 09:08:48.449414 (Thread-1): finished collecting timing info
2021-12-01 09:08:48.449999 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ea74d00>]}
2021-12-01 09:08:48.450482 (Thread-1): 12:08:48 | 31 of 34 OK created table model dbt_alice.github__daily_metrics...... [CREATE TABLE (349.0 rows, 68.5 KB processed) in 4.71s]
2021-12-01 09:08:48.450745 (Thread-1): Finished running node model.github.github__daily_metrics
2021-12-01 09:08:48.451521 (Thread-1): Began running node model.github.github__monthly_metrics
2021-12-01 09:08:48.451902 (Thread-1): 12:08:48 | 32 of 34 START table model dbt_alice.github__monthly_metrics......... [RUN]
2021-12-01 09:08:48.452327 (Thread-1): Acquiring new bigquery connection "model.github.github__monthly_metrics".
2021-12-01 09:08:48.452606 (Thread-1): Compiling model.github.github__monthly_metrics
2021-12-01 09:08:48.453352 (Thread-1): unclosed <ssl.SSLSocket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64969), raddr=('173.194.73.95', 443)>
2021-12-01 09:08:48.453642 (Thread-1): unclosed <ssl.SSLSocket fd=19, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64970), raddr=('209.85.233.95', 443)>
2021-12-01 09:08:48.457932 (Thread-1): Writing injected SQL for node "model.github.github__monthly_metrics"
2021-12-01 09:08:48.458513 (Thread-1): finished collecting timing info
2021-12-01 09:08:48.459963 (Thread-1): unclosed <ssl.SSLSocket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64967), raddr=('173.194.73.95', 443)>
2021-12-01 09:08:48.460252 (Thread-1): unclosed <ssl.SSLSocket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64968), raddr=('209.85.233.95', 443)>
2021-12-01 09:08:48.463748 (Thread-1): Writing runtime SQL for node "model.github.github__monthly_metrics"
2021-12-01 09:08:48.464257 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:08:48.468699 (Thread-1): On model.github.github__monthly_metrics: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github.github__monthly_metrics"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`github__monthly_metrics`
  
  
  OPTIONS()
  as (
    with daily_metrics as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`github__daily_metrics`
)

select 
  
    timestamp_trunc(
        cast(day as timestamp),
        month
    )

 as month, 
  sum(number_issues_opened) as number_issues_opened,
  sum(number_issues_closed) as number_issues_closed,
  sum(sum_days_issue_open) / sum(number_issues_opened) as avg_days_issue_open,
  max(longest_days_issue_open) as longest_days_issue_open,
  sum(number_prs_opened) as number_prs_opened,
  sum(number_prs_merged) as number_prs_merged,
  sum(number_prs_closed_without_merge) as number_prs_closed_without_merge,
  sum(sum_days_pr_open) / sum(number_prs_opened) as avg_days_pr_open,
  max(longest_days_pr_open) as longest_days_pr_open
from daily_metrics 
group by 1
order by 1 desc
  );
    
2021-12-01 09:08:51.193111 (Thread-1): finished collecting timing info
2021-12-01 09:08:51.193771 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10eb7cd90>]}
2021-12-01 09:08:51.194257 (Thread-1): 12:08:51 | 32 of 34 OK created table model dbt_alice.github__monthly_metrics.... [CREATE TABLE (29.0 rows, 21.8 KB processed) in 2.74s]
2021-12-01 09:08:51.194512 (Thread-1): Finished running node model.github.github__monthly_metrics
2021-12-01 09:08:51.194770 (Thread-1): Began running node model.github.github__quarterly_metrics
2021-12-01 09:08:51.195217 (Thread-1): 12:08:51 | 33 of 34 START table model dbt_alice.github__quarterly_metrics....... [RUN]
2021-12-01 09:08:51.195668 (Thread-1): Acquiring new bigquery connection "model.github.github__quarterly_metrics".
2021-12-01 09:08:51.195898 (Thread-1): Compiling model.github.github__quarterly_metrics
2021-12-01 09:08:51.200249 (Thread-1): Writing injected SQL for node "model.github.github__quarterly_metrics"
2021-12-01 09:08:51.200803 (Thread-1): finished collecting timing info
2021-12-01 09:08:51.203922 (Thread-1): Writing runtime SQL for node "model.github.github__quarterly_metrics"
2021-12-01 09:08:51.204364 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:08:51.208235 (Thread-1): On model.github.github__quarterly_metrics: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github.github__quarterly_metrics"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`github__quarterly_metrics`
  
  
  OPTIONS()
  as (
    with daily_metrics as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`github__daily_metrics`
)

select 
  
    timestamp_trunc(
        cast(day as timestamp),
        quarter
    )

 as quarter, 
  sum(number_issues_opened) as number_issues_opened,
  sum(number_issues_closed) as number_issues_closed,
  sum(sum_days_issue_open) / sum(number_issues_opened) as avg_days_issue_open,
  max(longest_days_issue_open) as longest_days_issue_open,
  sum(number_prs_opened) as number_prs_opened,
  sum(number_prs_merged) as number_prs_merged,
  sum(number_prs_closed_without_merge) as number_prs_closed_without_merge,
  sum(sum_days_pr_open) / sum(number_prs_opened) as avg_days_pr_open,
  max(longest_days_pr_open) as longest_days_pr_open

from daily_metrics 
group by 1
order by 1 desc
  );
    
2021-12-01 09:08:53.855760 (Thread-1): finished collecting timing info
2021-12-01 09:08:53.856575 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ea14be0>]}
2021-12-01 09:08:53.857185 (Thread-1): 12:08:53 | 33 of 34 OK created table model dbt_alice.github__quarterly_metrics.. [CREATE TABLE (11.0 rows, 21.8 KB processed) in 2.66s]
2021-12-01 09:08:53.857451 (Thread-1): Finished running node model.github.github__quarterly_metrics
2021-12-01 09:08:53.857722 (Thread-1): Began running node model.github.github__weekly_metrics
2021-12-01 09:08:53.858338 (Thread-1): 12:08:53 | 34 of 34 START table model dbt_alice.github__weekly_metrics.......... [RUN]
2021-12-01 09:08:53.858897 (Thread-1): Acquiring new bigquery connection "model.github.github__weekly_metrics".
2021-12-01 09:08:53.859139 (Thread-1): Compiling model.github.github__weekly_metrics
2021-12-01 09:08:53.863916 (Thread-1): Writing injected SQL for node "model.github.github__weekly_metrics"
2021-12-01 09:08:53.864526 (Thread-1): finished collecting timing info
2021-12-01 09:08:53.868439 (Thread-1): Writing runtime SQL for node "model.github.github__weekly_metrics"
2021-12-01 09:08:53.869028 (Thread-1): Opening a new connection, currently in state closed
2021-12-01 09:08:53.873719 (Thread-1): On model.github.github__weekly_metrics: /* {"app": "dbt", "dbt_version": "0.21.0", "profile_name": "fivetran", "target_name": "dev", "node_id": "model.github.github__weekly_metrics"} */


  create or replace table `dbt-technical-training`.`dbt_alice`.`github__weekly_metrics`
  
  
  OPTIONS()
  as (
    with daily_metrics as (
    select *
    from `dbt-technical-training`.`dbt_alice`.`github__daily_metrics`
)

select 
  
    timestamp_trunc(
        cast(day as timestamp),
        week
    )

 as week, 
  sum(number_issues_opened) as number_issues_opened,
  sum(number_issues_closed) as number_issues_closed,
  sum(sum_days_issue_open) / sum(number_issues_opened) as avg_days_issue_open,
  max(longest_days_issue_open) as longest_days_issue_open,
  sum(number_prs_opened) as number_prs_opened,
  sum(number_prs_merged) as number_prs_merged,
  sum(number_prs_closed_without_merge) as number_prs_closed_without_merge,
  sum(sum_days_pr_open) / sum(number_prs_opened) as avg_days_pr_open,
  max(longest_days_pr_open) as longest_days_pr_open
from daily_metrics 
group by 1
order by 1 desc
  );
    
2021-12-01 09:08:56.620123 (Thread-1): finished collecting timing info
2021-12-01 09:08:56.623182 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b0a307b6-3545-431e-85be-f7084d15661f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10eb1fee0>]}
2021-12-01 09:08:56.623901 (Thread-1): 12:08:56 | 34 of 34 OK created table model dbt_alice.github__weekly_metrics..... [CREATE TABLE (99.0 rows, 21.8 KB processed) in 2.76s]
2021-12-01 09:08:56.624250 (Thread-1): Finished running node model.github.github__weekly_metrics
2021-12-01 09:08:56.626083 (MainThread): Acquiring new bigquery connection "master".
2021-12-01 09:08:56.626818 (MainThread): 12:08:56 | 
2021-12-01 09:08:56.627086 (MainThread): 12:08:56 | Finished running 20 table models, 14 view models in 88.36s.
2021-12-01 09:08:56.627418 (MainThread): Connection 'master' was properly closed.
2021-12-01 09:08:56.627626 (MainThread): Connection 'model.github.github__weekly_metrics' was properly closed.
2021-12-01 09:08:56.631480 (MainThread): unclosed <ssl.SSLSocket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64972), raddr=('209.85.233.95', 443)>
2021-12-01 09:08:56.631884 (MainThread): unclosed <ssl.SSLSocket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64971), raddr=('173.194.73.95', 443)>
2021-12-01 09:08:56.632268 (MainThread): unclosed <ssl.SSLSocket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64973), raddr=('173.194.73.95', 443)>
2021-12-01 09:08:56.632567 (MainThread): unclosed <ssl.SSLSocket fd=19, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('192.168.0.100', 64974), raddr=('209.85.233.95', 443)>
2021-12-01 09:08:56.652037 (MainThread): 
2021-12-01 09:08:56.652313 (MainThread): Completed successfully
2021-12-01 09:08:56.652593 (MainThread): 
Done. PASS=34 WARN=0 ERROR=0 SKIP=0 TOTAL=34
2021-12-01 09:08:56.652884 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ebe9b80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e2b0af0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10eb789a0>]}
2021-12-01 09:08:56.653181 (MainThread): Flushing usage events
